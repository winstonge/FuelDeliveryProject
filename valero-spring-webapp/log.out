SpringJUnit4ClassRunner constructor called with [class com.govansnv.fuel.test.IFindBySearchTermTest]
Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
Instantiating TestContextBootstrapper for test class [com.govansnv.fuel.test.IFindBySearchTermTest] from class [org.springframework.test.context.web.WebTestContextBootstrapper]
Delegating to AnnotationConfigWebContextLoader to process context configuration [ContextConfigurationAttributes@5bcab519 declaringClass = 'com.govansnv.fuel.test.IFindBySearchTermTest', classes = '{class com.govansnv.fuel.config.AppConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.govansnv.fuel.test.IFindBySearchTermTest]
Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@47ef968d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@23e028a9, com.github.springtestdbunit.DbUnitTestExecutionListener@3dd4520b]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.govansnv.fuel.test.IFindBySearchTermTest]
Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = IFindBySearchTermTest, testInstance = com.govansnv.fuel.test.IFindBySearchTermTest@3b084709, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
Delegating to AnnotationConfigWebContextLoader to load context from [WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]].
Loading WebApplicationContext for merged context configuration [WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]].
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Registering annotated classes: {class com.govansnv.fuel.config.AppConfig}
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1f57539: startup date [Sun Jun 11 10:04:00 VET 2017]; root of context hierarchy
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Bean factory for org.springframework.web.context.support.GenericWebApplicationContext@1f57539: org.springframework.beans.factory.support.DefaultListableBeanFactory@6a79c292: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,appConfig]; root of factory hierarchy
Registering scope 'request' with implementation [org.springframework.web.context.request.RequestScope@7fe8ea47]
Registering scope 'session' with implementation [org.springframework.web.context.request.SessionScope@255b53dc]
Registering scope 'globalSession' with implementation [org.springframework.web.context.request.SessionScope@1dd92fe2]
Registering scope 'application' with implementation [org.springframework.web.context.support.ServletContextScope@1b68b9a4]
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Adding [class path resource [config.properties]] PropertySource with lowest search precedence
Resolved classpath location [com/govansnv/fuel/] to resources [URL [file:/C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/test-classes/com/govansnv/fuel/], URL [file:/C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/]]
Looking for matching resources in directory tree [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes\com\govansnv\fuel]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes\com\govansnv\fuel] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/test-classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes\com\govansnv\fuel\test] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/test-classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes\com\govansnv\fuel\test\helper] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/test-classes/com/govansnv/fuel/**/*.class]
Looking for matching resources in directory tree [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dto] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\factory] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/**/*.class]
Resolved location pattern [classpath*:com/govansnv/fuel/**/*.class] to resources [file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes\com\govansnv\fuel\test\helper\AllITests.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes\com\govansnv\fuel\test\IFindByCustomerSearchTerm.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes\com\govansnv\fuel\test\IFindBySearchTermTest.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\AppConfig.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\AppInitializer.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\AuthServerOAuth2Config.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\MethodSecurityConfig.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\OAuth2ResourceServerConfig.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\OAuth2SecurityConfig.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\CompanyRestController.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\DepartmentRestController.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\DeviceRestController.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\DriverRestController.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\AbstractDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\CompanyDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\CustomerDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\DepartmentDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\DeviceDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\DriverDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\FuelDeliveryDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\CompanyDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\CustomerDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\DepartmentDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\DeviceDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\DriverDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\FuelDeliveryDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\PurchaseOrderDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\TruckDaoImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\PurchaseOrderDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\TruckDao.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dto\StatusDTO.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\factory\ActionFactory.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\factory\BasicFuelingAction.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\factory\FuelDeliveryAction.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Company.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Customer.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Department.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Device.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Driver.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\FuelDelivery.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\PurchaseOrder.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Truck.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\CompanyService.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\CustomerService.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\DepartmentService.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\DeviceService.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\DriverService.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\FuelDeliveryService.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\CompanyServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\CustomerServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\DepartmentServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\DeviceServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\DriverServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\FuelDeliveryServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\PurchaseOrderServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\TruckServiceImpl.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\PurchaseOrderService.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\TruckService.class]]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\AuthServerOAuth2Config.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\MethodSecurityConfig.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\OAuth2ResourceServerConfig.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\config\OAuth2SecurityConfig.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\CompanyRestController.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\DepartmentRestController.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\DeviceRestController.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\controller\DriverRestController.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\CompanyDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\CustomerDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\DepartmentDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\DeviceDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\DriverDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\FuelDeliveryDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\PurchaseOrderDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\dao\impl\TruckDaoImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\CompanyServiceImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\CustomerServiceImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\DepartmentServiceImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\DeviceServiceImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\DriverServiceImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\FuelDeliveryServiceImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\PurchaseOrderServiceImpl.class]
Identified candidate component class: file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\service\impl\TruckServiceImpl.class]
Registered bean definition for imported class 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar'
Registered bean definition for imported class 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.authorizationEndpoint()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.tokenEndpoint()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.checkTokenEndpoint()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.whitelabelApprovalEndpoint()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.whitelabelErrorEndpoint()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.oauth2EndpointHandlerMapping()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.consumerTokenServices()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.defaultAuthorizationServerTokenServices()
Registered bean definition for imported class 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration'
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration.clientDetailsServiceConfigurer()
Registering bean definition for @Bean method org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration.clientDetailsService()
Registered bean definition for imported class 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration'
Registered bean definition for imported class 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Registering bean definition for @Bean method org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.authenticationManagerBuilder()
Registering bean definition for @Bean method org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.enableGlobalAuthenticationAutowiredConfigurer()
Registered bean definition for imported class 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Registering bean definition for @Bean method org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration.objectPostProcessor()
Registering bean definition for @Bean method com.govansnv.fuel.config.MethodSecurityConfig.methodSecurityInterceptor()
Registering bean definition for @Bean method com.govansnv.fuel.config.MethodSecurityConfig.methodSecurityMetadataSource()
Registering bean definition for @Bean method com.govansnv.fuel.config.MethodSecurityConfig.preInvocationAuthorizationAdvice()
Registering bean definition for @Bean method com.govansnv.fuel.config.MethodSecurityConfig.metaDataSourceAdvisor()
Registered bean definition for imported class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Registering bean definition for @Bean method org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.delegatingApplicationListener()
Registering bean definition for @Bean method org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.webSecurityExpressionHandler()
Registering bean definition for @Bean method org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain()
Registering bean definition for @Bean method org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.privilegeEvaluator()
Registering bean definition for @Bean method org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.autowiredWebSecurityConfigurersIgnoreParents()
Registering bean definition for @Bean method com.govansnv.fuel.config.OAuth2SecurityConfig.authenticationManagerBean()
Registering bean definition for @Bean method com.govansnv.fuel.config.OAuth2SecurityConfig.tokenStore()
Registering bean definition for @Bean method com.govansnv.fuel.config.OAuth2SecurityConfig.userApprovalHandler()
Registering bean definition for @Bean method com.govansnv.fuel.config.OAuth2SecurityConfig.approvalStore()
Registered bean definition for imported class 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.requestMappingHandlerMapping()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcPathMatcher()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcUrlPathHelper()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcContentNegotiationManager()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.viewControllerHandlerMapping()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.beanNameHandlerMapping()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.resourceHandlerMapping()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcResourceUrlProvider()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.defaultServletHandlerMapping()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.requestMappingHandlerAdapter()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcConversionService()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcValidator()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcUriComponentsContributor()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.httpRequestHandlerAdapter()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.simpleControllerHandlerAdapter()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.handlerExceptionResolver()
Registering bean definition for @Bean method org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.mvcViewResolver()
Registered bean definition for imported class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionAdvisor()
Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionAttributeSource()
Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionInterceptor()
Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionalEventListenerFactory()
Registering bean definition for @Bean method com.govansnv.fuel.config.AppConfig.urlBasedViewResolver()
Registering bean definition for @Bean method com.govansnv.fuel.config.AppConfig.dataSource()
Registering bean definition for @Bean method com.govansnv.fuel.config.AppConfig.entityManagerFactory()
Registering bean definition for @Bean method com.govansnv.fuel.config.AppConfig.jpaVendorAdapter()
Registering bean definition for @Bean method com.govansnv.fuel.config.AppConfig.transactionManager()
Creating shared instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar'
Creating instance of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar'
Eagerly caching bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar'
Successfully enhanced com.govansnv.fuel.config.AppConfig; enhanced class name is: com.govansnv.fuel.config.AppConfig$$EnhancerBySpringCGLIB$$861faf24
Replacing bean definition 'appConfig' existing class 'com.govansnv.fuel.config.AppConfig' with enhanced class 'com.govansnv.fuel.config.AppConfig$$EnhancerBySpringCGLIB$$861faf24'
Successfully enhanced com.govansnv.fuel.config.AuthServerOAuth2Config; enhanced class name is: com.govansnv.fuel.config.AuthServerOAuth2Config$$EnhancerBySpringCGLIB$$1baeb873
Replacing bean definition 'authServerOAuth2Config' existing class 'com.govansnv.fuel.config.AuthServerOAuth2Config' with enhanced class 'com.govansnv.fuel.config.AuthServerOAuth2Config$$EnhancerBySpringCGLIB$$1baeb873'
Successfully enhanced com.govansnv.fuel.config.MethodSecurityConfig; enhanced class name is: com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce
Replacing bean definition 'methodSecurityConfig' existing class 'com.govansnv.fuel.config.MethodSecurityConfig' with enhanced class 'com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce'
Successfully enhanced com.govansnv.fuel.config.OAuth2ResourceServerConfig; enhanced class name is: com.govansnv.fuel.config.OAuth2ResourceServerConfig$$EnhancerBySpringCGLIB$$f57ffb19
Replacing bean definition 'OAuth2ResourceServerConfig' existing class 'com.govansnv.fuel.config.OAuth2ResourceServerConfig' with enhanced class 'com.govansnv.fuel.config.OAuth2ResourceServerConfig$$EnhancerBySpringCGLIB$$f57ffb19'
Successfully enhanced com.govansnv.fuel.config.OAuth2SecurityConfig; enhanced class name is: com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108
Replacing bean definition 'OAuth2SecurityConfig' existing class 'com.govansnv.fuel.config.OAuth2SecurityConfig' with enhanced class 'com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108'
Successfully enhanced org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration; enhanced class name is: org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$$EnhancerBySpringCGLIB$$d4102db9
Replacing bean definition 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration' existing class 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration' with enhanced class 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$$EnhancerBySpringCGLIB$$d4102db9'
Successfully enhanced org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration; enhanced class name is: org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration$$EnhancerBySpringCGLIB$$2ea48c17
Replacing bean definition 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration' existing class 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration' with enhanced class 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration$$EnhancerBySpringCGLIB$$2ea48c17'
Successfully enhanced org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration; enhanced class name is: org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1
Replacing bean definition 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' existing class 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' with enhanced class 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1'
Successfully enhanced org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration; enhanced class name is: org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$cd5ffb80
Replacing bean definition 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' existing class 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' with enhanced class 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$cd5ffb80'
Successfully enhanced org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration; enhanced class name is: org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$cd5ffb80
Replacing bean definition 'enableGlobalAuthenticationAutowiredConfigurer' existing class 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' with enhanced class 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$cd5ffb80'
Successfully enhanced org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration; enhanced class name is: org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8196f10b
Replacing bean definition 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' existing class 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' with enhanced class 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8196f10b'
Successfully enhanced org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration; enhanced class name is: org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$901a55c4
Replacing bean definition 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration' existing class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration' with enhanced class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$901a55c4'
Successfully enhanced org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration; enhanced class name is: org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$901a55c4
Replacing bean definition 'delegatingApplicationListener' existing class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration' with enhanced class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$901a55c4'
Successfully enhanced org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; enhanced class name is: org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration$$EnhancerBySpringCGLIB$$adaa0e07
Replacing bean definition 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration' existing class 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration' with enhanced class 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration$$EnhancerBySpringCGLIB$$adaa0e07'
Successfully enhanced org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; enhanced class name is: org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8e928d1
Replacing bean definition 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' existing class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' with enhanced class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8e928d1'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@d23e042]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2f953efd]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@3e0e1046]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Creating shared instance of singleton bean 'appConfig'
Creating instance of bean 'appConfig'
Registered injected element on class [com.govansnv.fuel.config.AppConfig$$EnhancerBySpringCGLIB$$861faf24]: AutowiredFieldElement for private org.springframework.core.env.Environment com.govansnv.fuel.config.AppConfig.environment
Eagerly caching bean 'appConfig' to allow for resolving potential circular references
Processing injected element of bean 'appConfig': AutowiredFieldElement for private org.springframework.core.env.Environment com.govansnv.fuel.config.AppConfig.environment
Returning cached instance of singleton bean 'environment'
Autowiring by type from bean name 'appConfig' to bean named 'environment'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating instance of bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityConfig'
Creating instance of bean 'methodSecurityConfig'
Registered injected element on class [com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce]: AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setApplicationContext(org.springframework.context.ApplicationContext)
Registered injected element on class [com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce]: AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Registered injected element on class [com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce]: AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setPermissionEvaluator(java.util.List)
Registered injected element on class [com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce]: AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Registered injected element on class [com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce]: AutowiredFieldElement for private com.govansnv.fuel.config.OAuth2SecurityConfig com.govansnv.fuel.config.MethodSecurityConfig.securityConfig
Eagerly caching bean 'methodSecurityConfig' to allow for resolving potential circular references
Processing injected element of bean 'methodSecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setApplicationContext(org.springframework.context.ApplicationContext)
Autowiring by type from bean name 'methodSecurityConfig' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1f57539'
Processing injected element of bean 'methodSecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Processing injected element of bean 'methodSecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setPermissionEvaluator(java.util.List)
Processing injected element of bean 'methodSecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Creating shared instance of singleton bean 'objectPostProcessor'
Creating instance of bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Creating instance of bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Eagerly caching bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' to allow for resolving potential circular references
Skipping currently created advisor 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Registered injected element on class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8e928d1]: AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
Eagerly caching bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' to allow for resolving potential circular references
Processing injected element of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
Skipping currently created advisor 'metaDataSourceAdvisor'
Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating instance of bean 'transactionAttributeSource'
Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Eagerly caching bean 'transactionAttributeSource' to allow for resolving potential circular references
Skipping currently created advisor 'metaDataSourceAdvisor'
Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Creating instance of bean 'transactionInterceptor'
Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Returning cached instance of singleton bean 'transactionAttributeSource'
Eagerly caching bean 'transactionInterceptor' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'transactionInterceptor'
Finished creating instance of bean 'transactionInterceptor'
Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6a79c292'
Eagerly caching bean 'objectPostProcessor' to allow for resolving potential circular references
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'objectPostProcessor'
Autowiring by type from bean name 'methodSecurityConfig' to bean named 'objectPostProcessor'
Processing injected element of bean 'methodSecurityConfig': AutowiredFieldElement for private com.govansnv.fuel.config.OAuth2SecurityConfig com.govansnv.fuel.config.MethodSecurityConfig.securityConfig
Creating shared instance of singleton bean 'OAuth2SecurityConfig'
Creating instance of bean 'OAuth2SecurityConfig'
Registered injected element on class [com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Registered injected element on class [com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setApplicationContext(org.springframework.context.ApplicationContext)
Registered injected element on class [com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setContentNegotationStrategy(org.springframework.web.accept.ContentNegotiationStrategy)
Registered injected element on class [com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Registered injected element on class [com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setAuthenticationConfiguration(org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration)
Registered injected element on class [com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108]: AutowiredFieldElement for private org.springframework.security.oauth2.provider.ClientDetailsService com.govansnv.fuel.config.OAuth2SecurityConfig.clientService
Registered injected element on class [com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108]: AutowiredMethodElement for public void com.govansnv.fuel.config.OAuth2SecurityConfig.globalUserDetails(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder) throws java.lang.Exception
Eagerly caching bean 'OAuth2SecurityConfig' to allow for resolving potential circular references
Processing injected element of bean 'OAuth2SecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Processing injected element of bean 'OAuth2SecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setApplicationContext(org.springframework.context.ApplicationContext)
Autowiring by type from bean name 'OAuth2SecurityConfig' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1f57539'
Processing injected element of bean 'OAuth2SecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setContentNegotationStrategy(org.springframework.web.accept.ContentNegotiationStrategy)
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating instance of bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Creating instance of bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Registered injected element on class [org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration$$EnhancerBySpringCGLIB$$adaa0e07]: AutowiredMethodElement for public void org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.setConfigurers(java.util.List)
Eagerly caching bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration' to allow for resolving potential circular references
Processing injected element of bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration': AutowiredMethodElement for public void org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.setConfigurers(java.util.List)
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning eagerly cached instance of singleton bean 'appConfig' that is not fully initialized yet - a consequence of a circular reference
Autowiring by type from bean name 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration' to bean named 'appConfig'
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'mvcContentNegotiationManager' to allow for resolving potential circular references
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcContentNegotiationManager'
Autowiring by type from bean name 'OAuth2SecurityConfig' to bean named 'mvcContentNegotiationManager'
Processing injected element of bean 'OAuth2SecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Returning cached instance of singleton bean 'objectPostProcessor'
Autowiring by type from bean name 'OAuth2SecurityConfig' to bean named 'objectPostProcessor'
Processing injected element of bean 'OAuth2SecurityConfig': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setAuthenticationConfiguration(org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration)
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating instance of bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Registered injected element on class [org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$cd5ffb80]: AutowiredMethodElement for public void org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.setGlobalAuthenticationConfigurers(java.util.List) throws java.lang.Exception
Registered injected element on class [org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$cd5ffb80]: AutowiredMethodElement for public void org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.setApplicationContext(org.springframework.context.ApplicationContext)
Registered injected element on class [org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$cd5ffb80]: AutowiredMethodElement for public void org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Eagerly caching bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' to allow for resolving potential circular references
Processing injected element of bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.setGlobalAuthenticationConfigurers(java.util.List) throws java.lang.Exception
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Creating instance of bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1f57539'
Eagerly caching bean 'enableGlobalAuthenticationAutowiredConfigurer' to allow for resolving potential circular references
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' to bean named 'enableGlobalAuthenticationAutowiredConfigurer'
Processing injected element of bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.setApplicationContext(org.springframework.context.ApplicationContext)
Autowiring by type from bean name 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1f57539'
Processing injected element of bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Returning cached instance of singleton bean 'objectPostProcessor'
Autowiring by type from bean name 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' to bean named 'objectPostProcessor'
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Autowiring by type from bean name 'OAuth2SecurityConfig' to bean named 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Processing injected element of bean 'OAuth2SecurityConfig': AutowiredFieldElement for private org.springframework.security.oauth2.provider.ClientDetailsService com.govansnv.fuel.config.OAuth2SecurityConfig.clientService
Creating shared instance of singleton bean 'clientDetailsService'
Creating instance of bean 'clientDetailsService'
Eagerly caching bean 'clientDetailsService' to allow for resolving potential circular references
Creating JDK dynamic proxy: target source is SimpleBeanTargetSource for target bean 'scopedTarget.clientDetailsService'
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'clientDetailsService'
Autowiring by type from bean name 'OAuth2SecurityConfig' to bean named 'clientDetailsService'
Processing injected element of bean 'OAuth2SecurityConfig': AutowiredMethodElement for public void com.govansnv.fuel.config.OAuth2SecurityConfig.globalUserDetails(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder) throws java.lang.Exception
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Creating instance of bean 'authenticationManagerBuilder'
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Returning cached instance of singleton bean 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Eagerly caching bean 'authenticationManagerBuilder' to allow for resolving potential circular references
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'OAuth2SecurityConfig' to bean named 'authenticationManagerBuilder'
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'OAuth2SecurityConfig'
Autowiring by type from bean name 'methodSecurityConfig' to bean named 'OAuth2SecurityConfig'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
Skipping currently created advisor 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'methodSecurityConfig'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating instance of bean 'methodSecurityMetadataSource'
Returning cached instance of singleton bean 'methodSecurityConfig'
Eagerly caching bean 'methodSecurityMetadataSource' to allow for resolving potential circular references
Finished creating instance of bean 'methodSecurityMetadataSource'
Eagerly caching bean 'metaDataSourceAdvisor' to allow for resolving potential circular references
Finished creating instance of bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'appConfig'
Creating shared instance of singleton bean 'dataSource'
Creating instance of bean 'dataSource'
Returning cached instance of singleton bean 'appConfig'
Found key 'jdbc.driverClassName' in [class path resource [config.properties]] with type [String]
Loaded JDBC driver: com.mysql.jdbc.Driver
Found key 'jdbc.url' in [class path resource [config.properties]] with type [String]
Found key 'jdbc.username' in [class path resource [config.properties]] with type [String]
Found key 'jdbc.password' in [class path resource [config.properties]] with type [String]
Eagerly caching bean 'dataSource' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'dataSource'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Creating instance of bean 'jpaVendorAdapter'
Returning cached instance of singleton bean 'appConfig'
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Eagerly caching bean 'jpaVendorAdapter' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'jpaVendorAdapter'
Found key 'hibernate.dialect' in [class path resource [config.properties]] with type [String]
Found key 'hibernate.show_sql' in [class path resource [config.properties]] with type [String]
Found key 'hibernate.format_sql' in [class path resource [config.properties]] with type [String]
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Resolved classpath location [META-INF/persistence.xml] to resources []
Resolved classpath location [com/govansnv/fuel/model/] to resources [URL [file:/C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/model/]]
Looking for matching resources in directory tree [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model]
Searching directory [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model] for files matching pattern [C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/classes/com/govansnv/fuel/model/**/*.class]
Resolved location pattern [classpath*:com/govansnv/fuel/model/**/*.class] to resources [file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Company.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Customer.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Department.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Device.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Driver.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\FuelDelivery.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\PurchaseOrder.class], file [C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes\com\govansnv\fuel\model\Truck.class]]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@4aa298b7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@7e5c856f
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/WinstonEvans/workspace/valero-spring-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.govansnv.fuel.model.Company
		com.govansnv.fuel.model.Customer
		com.govansnv.fuel.model.Department
		com.govansnv.fuel.model.Device
		com.govansnv.fuel.model.Driver
		com.govansnv.fuel.model.FuelDelivery
		com.govansnv.fuel.model.PurchaseOrder
		com.govansnv.fuel.model.Truck]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
HHH000412: Hibernate Core {4.3.5.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Adding type registration boolean -> org.hibernate.type.BooleanType@7be58f16
Adding type registration boolean -> org.hibernate.type.BooleanType@7be58f16
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7be58f16
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11eadcba
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5827af16
Adding type registration yes_no -> org.hibernate.type.YesNoType@630cb4a4
Adding type registration byte -> org.hibernate.type.ByteType@5b057c8c
Adding type registration byte -> org.hibernate.type.ByteType@5b057c8c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b057c8c
Adding type registration character -> org.hibernate.type.CharacterType@650eab8
Adding type registration char -> org.hibernate.type.CharacterType@650eab8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@650eab8
Adding type registration short -> org.hibernate.type.ShortType@f0e995e
Adding type registration short -> org.hibernate.type.ShortType@f0e995e
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f0e995e
Adding type registration integer -> org.hibernate.type.IntegerType@150ab4ed
Adding type registration int -> org.hibernate.type.IntegerType@150ab4ed
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@150ab4ed
Adding type registration long -> org.hibernate.type.LongType@546ccad7
Adding type registration long -> org.hibernate.type.LongType@546ccad7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@546ccad7
Adding type registration float -> org.hibernate.type.FloatType@5ad10c1a
Adding type registration float -> org.hibernate.type.FloatType@5ad10c1a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5ad10c1a
Adding type registration double -> org.hibernate.type.DoubleType@3f363cf5
Adding type registration double -> org.hibernate.type.DoubleType@3f363cf5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f363cf5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dbe250d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dbe250d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f071df8
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f071df8
Adding type registration string -> org.hibernate.type.StringType@5d018107
Adding type registration java.lang.String -> org.hibernate.type.StringType@5d018107
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38be305c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@275fe372
Adding type registration url -> org.hibernate.type.UrlType@366ef90e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@366ef90e
Adding type registration date -> org.hibernate.type.DateType@2611b9a3
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2611b9a3
Adding type registration time -> org.hibernate.type.TimeType@5b64c4b7
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5b64c4b7
Adding type registration timestamp -> org.hibernate.type.TimestampType@1252b961
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1252b961
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1252b961
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@51e8e6e6
Adding type registration calendar -> org.hibernate.type.CalendarType@20b5f2ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20b5f2ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20b5f2ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@293d0107
Adding type registration locale -> org.hibernate.type.LocaleType@74cadd41
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@74cadd41
Adding type registration currency -> org.hibernate.type.CurrencyType@65a4798f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@65a4798f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@83298d7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@83298d7
Adding type registration class -> org.hibernate.type.ClassType@665e9289
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@665e9289
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@277f7dd3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@277f7dd3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470a696f
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c55f277
Adding type registration binary -> org.hibernate.type.BinaryType@58e6d4b8
Adding type registration byte[] -> org.hibernate.type.BinaryType@58e6d4b8
Adding type registration [B -> org.hibernate.type.BinaryType@58e6d4b8
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38f57b3d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38f57b3d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38f57b3d
Adding type registration image -> org.hibernate.type.ImageType@e260766
Adding type registration characters -> org.hibernate.type.CharArrayType@3fc9dfc5
Adding type registration char[] -> org.hibernate.type.CharArrayType@3fc9dfc5
Adding type registration [C -> org.hibernate.type.CharArrayType@3fc9dfc5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34a1d21f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34a1d21f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34a1d21f
Adding type registration text -> org.hibernate.type.TextType@6f0ca692
Adding type registration ntext -> org.hibernate.type.NTextType@6a66a204
Adding type registration blob -> org.hibernate.type.BlobType@18518ccf
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@18518ccf
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4c6daf0
Adding type registration clob -> org.hibernate.type.ClobType@7a48e6e2
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7a48e6e2
Adding type registration nclob -> org.hibernate.type.NClobType@62e70ea3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@62e70ea3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741b3bc3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@68d6972f
Adding type registration serializable -> org.hibernate.type.SerializableType@5b58ed3c
Adding type registration object -> org.hibernate.type.ObjectType@569bf9eb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@569bf9eb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@76ba13c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@eb6449b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c351808
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@180e6ac4
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42b64ab8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e985ce9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a39fe6a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@410ae9a3
HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Preparing to build session factory with filters : {}
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Database ->
       name : MySQL
    version : 5.7.18-log
      major : 5
      minor : 7
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.govansnv.fuel.model.Device
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Device
Bind entity com.govansnv.fuel.model.Device on table Device
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Device), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Device:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Device), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Device), mappingColumn=device_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deviceNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Device:deviceNo]
building SimpleValue for deviceNo
Building property deviceNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Device), mappingColumn=last_synch, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastSynch with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Device:lastSynch]
building SimpleValue for lastSynch
Building property lastSynch
Binding entity from annotated class: com.govansnv.fuel.model.Customer
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Customer
Bind entity com.govansnv.fuel.model.Customer on table Customer
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Customer:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=barcode, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property barcode with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Customer:barcode]
building SimpleValue for barcode
Building property barcode
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=company, insertable=true, updatable=true, unique=false}
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property customerId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Customer:customerId]
building SimpleValue for customerId
Building property customerId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=customer_ship_to, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property customerShipTo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Customer:customerShipTo]
building SimpleValue for customerShipTo
Building property customerShipTo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=customer_sold_to, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property customerSoldTo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Customer:customerSoldTo]
building SimpleValue for customerSoldTo
Building property customerSoldTo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=ship_to, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property shipTo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Customer:shipTo]
building SimpleValue for shipTo
Building property shipTo
Binding entity from annotated class: com.govansnv.fuel.model.PurchaseOrder
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name PurchaseOrder
Bind entity com.govansnv.fuel.model.PurchaseOrder on table purchase_order
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=customer, insertable=true, updatable=true, unique=false}
Building property customer
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=delivered_on, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deliveredOn with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:deliveredOn]
building SimpleValue for deliveredOn
Building property deliveredOn
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=fuel_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fuelName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:fuelName]
building SimpleValue for fuelName
Building property fuelName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=fuel_price, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fuelPrice with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:fuelPrice]
building SimpleValue for fuelPrice
Building property fuelPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=purchase_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property purchaseDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:purchaseDate]
building SimpleValue for purchaseDate
Building property purchaseDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=purchase_volume, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property purchaseVolume with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:purchaseVolume]
building SimpleValue for purchaseVolume
Building property purchaseVolume
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=ticket_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:ticketNo]
building SimpleValue for ticketNo
Building property ticketNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase_order), mappingColumn=truck_number, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property truckNumber with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.PurchaseOrder:truckNumber]
building SimpleValue for truckNumber
Building property truckNumber
Binding entity from annotated class: com.govansnv.fuel.model.FuelDelivery
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FuelDelivery
Bind entity com.govansnv.fuel.model.FuelDelivery on table fuel_delivery
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=company_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property companyName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:companyName]
building SimpleValue for companyName
Building property companyName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=device, insertable=true, updatable=true, unique=false}
Building property device
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=extra_points, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property extraPoints with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:extraPoints]
building SimpleValue for extraPoints
Building property extraPoints
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=fuel_price, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fuelPrice with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:fuelPrice]
building SimpleValue for fuelPrice
Building property fuelPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=meter_close_one, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property meterCloseOne with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:meterCloseOne]
building SimpleValue for meterCloseOne
Building property meterCloseOne
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=meter_close_two, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property meterCloseTwo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:meterCloseTwo]
building SimpleValue for meterCloseTwo
Building property meterCloseTwo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=meter_open_one, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property meterOpenOne with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:meterOpenOne]
building SimpleValue for meterOpenOne
Building property meterOpenOne
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=meter_open_two, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property meterOpenTwo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:meterOpenTwo]
building SimpleValue for meterOpenTwo
Building property meterOpenTwo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=purchase_order_item, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property purchaseOrderItem with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:purchaseOrderItem]
building SimpleValue for purchaseOrderItem
Building property purchaseOrderItem
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=total_fueled, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalFueled with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.FuelDelivery:totalFueled]
building SimpleValue for totalFueled
Building property totalFueled
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fuel_delivery), mappingColumn=truck, insertable=true, updatable=true, unique=false}
Building property truck
Binding entity from annotated class: com.govansnv.fuel.model.Driver
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Driver
Bind entity com.govansnv.fuel.model.Driver on table Driver
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Driver), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Driver:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Driver), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Driver), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstname with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Driver:firstname]
building SimpleValue for firstname
Building property firstname
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Driver), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastname with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Driver:lastname]
building SimpleValue for lastname
Building property lastname
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Driver), mappingColumn=passnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property passnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Driver:passnum]
building SimpleValue for passnum
Building property passnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Driver), mappingColumn=uname, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property uname with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Driver:uname]
building SimpleValue for uname
Building property uname
Binding entity from annotated class: com.govansnv.fuel.model.Company
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Company
Bind entity com.govansnv.fuel.model.Company on table Company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=address, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property addres with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:addres]
building SimpleValue for addres
Building property addres
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=city, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property city with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:city]
building SimpleValue for city
Building property city
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=company_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property companyName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:companyName]
building SimpleValue for companyName
Building property companyName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='company'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=customers, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=customers_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='customers_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='company'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='company'}
Collection role: com.govansnv.fuel.model.Company.customers
Building property customers
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='company'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=departments, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=departments_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='departments_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='company'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='company'}
Collection role: com.govansnv.fuel.model.Company.departments
Building property departments
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=fax, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fax with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:fax]
building SimpleValue for fax
Building property fax
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=phone, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=postal_code, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property postalCode with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:postalCode]
building SimpleValue for postalCode
Building property postalCode
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=slogan, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property slogan with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Company:slogan]
building SimpleValue for slogan
Building property slogan
Binding entity from annotated class: com.govansnv.fuel.model.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.govansnv.fuel.model.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Department:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=company, insertable=true, updatable=true, unique=false}
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Department:departmentName]
building SimpleValue for departmentName
Building property departmentName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=devices, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=devices_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='devices_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: com.govansnv.fuel.model.Department.devices
Building property devices
Binding entity from annotated class: com.govansnv.fuel.model.Truck
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Truck
Bind entity com.govansnv.fuel.model.Truck on table Truck
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Truck), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Truck:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Truck), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Truck), mappingColumn=number_of_meters, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property numberOfMeters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Truck:numberOfMeters]
building SimpleValue for numberOfMeters
Building property numberOfMeters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Truck), mappingColumn=truck_code, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property truckCode with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Truck:truckCode]
building SimpleValue for truckCode
Building property truckCode
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Truck), mappingColumn=truck_volume, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property truckVolume with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.govansnv.fuel.model.Truck:truckVolume]
building SimpleValue for truckVolume
Building property truckVolume
Starting fillSimpleValue for id
Starting fillSimpleValue for deviceNo
Starting fillSimpleValue for lastSynch
Starting fillSimpleValue for id
Starting fillSimpleValue for barcode
Starting fillSimpleValue for customerId
Starting fillSimpleValue for customerShipTo
Starting fillSimpleValue for customerSoldTo
Starting fillSimpleValue for shipTo
Starting fillSimpleValue for id
Starting fillSimpleValue for deliveredOn
Starting fillSimpleValue for fuelName
Starting fillSimpleValue for fuelPrice
Starting fillSimpleValue for purchaseDate
Starting fillSimpleValue for purchaseVolume
Starting fillSimpleValue for ticketNo
Starting fillSimpleValue for truckNumber
Starting fillSimpleValue for id
Starting fillSimpleValue for companyName
Starting fillSimpleValue for extraPoints
Starting fillSimpleValue for fuelPrice
Starting fillSimpleValue for meterCloseOne
Starting fillSimpleValue for meterCloseTwo
Starting fillSimpleValue for meterOpenOne
Starting fillSimpleValue for meterOpenTwo
Starting fillSimpleValue for purchaseOrderItem
Starting fillSimpleValue for totalFueled
Starting fillSimpleValue for id
Starting fillSimpleValue for firstname
Starting fillSimpleValue for lastname
Starting fillSimpleValue for passnum
Starting fillSimpleValue for uname
Starting fillSimpleValue for id
Starting fillSimpleValue for addres
Starting fillSimpleValue for city
Starting fillSimpleValue for companyName
Starting fillSimpleValue for fax
Starting fillSimpleValue for phone
Starting fillSimpleValue for postalCode
Starting fillSimpleValue for slogan
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentName
Starting fillSimpleValue for id
Starting fillSimpleValue for numberOfMeters
Starting fillSimpleValue for truckCode
Starting fillSimpleValue for truckVolume
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.govansnv.fuel.model.Company.customers
Binding a OneToMany: com.govansnv.fuel.model.Company.customers through a foreign key
Mapping collection: com.govansnv.fuel.model.Company.customers -> Customer
Retrieving property com.govansnv.fuel.model.Customer.company
Mapped collection key: company_id, one-to-many: com.govansnv.fuel.model.Customer
Second pass for collection: com.govansnv.fuel.model.Company.departments
Binding a OneToMany: com.govansnv.fuel.model.Company.departments through a foreign key
Mapping collection: com.govansnv.fuel.model.Company.departments -> department
Retrieving property com.govansnv.fuel.model.Department.company
Mapped collection key: company_id, one-to-many: com.govansnv.fuel.model.Department
Second pass for collection: com.govansnv.fuel.model.Department.devices
Binding a OneToMany: com.govansnv.fuel.model.Department.devices through a foreign key
Mapping collection: com.govansnv.fuel.model.Department.devices -> Device
Retrieving property com.govansnv.fuel.model.Device.department
Mapped collection key: department_id, one-to-many: com.govansnv.fuel.model.Device
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.govansnv.fuel.model.Company
Resolving reference to class: com.govansnv.fuel.model.Department
Resolving reference to class: com.govansnv.fuel.model.Department
Resolving reference to class: com.govansnv.fuel.model.Department
Resolving reference to class: com.govansnv.fuel.model.Company
Resolving reference to class: com.govansnv.fuel.model.Device
Resolving reference to class: com.govansnv.fuel.model.Device
Resolving reference to class: com.govansnv.fuel.model.Customer
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, java.vm.version=25.121-b13, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\WinstonEvans\workspace\valero-spring-webapp, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_121-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\WinstonEvans\workspace\valero-spring-webapp, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, os.arch=amd64, surefire.real.class.path=C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\surefire\surefirebooter9099903340762697194.jar, java.io.tmpdir=C:\Users\WINSTO~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre1.8.0_121/bin/server;C:/Program Files/Java/jre1.8.0_121/bin;C:/Program Files/Java/jre1.8.0_121/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files\nodejs\;C:\Users\WinstonEvans\AppData\Roaming\npm;C:\Users\WinstonEvans\Downloads\eclipse-jee-neon-3-win32-x86_64\eclipse;;., surefire.test.class.path=C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes;C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes;C:\Users\WinstonEvans\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\WinstonEvans\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\WinstonEvans\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\WinstonEvans\.m2\repository\com\google\code\gson\gson\2.6.2\gson-2.6.2.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\rest-assured\2.9.0\rest-assured-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\groovy\groovy\2.4.4\groovy-2.4.4.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\groovy\groovy-xml\2.4.4\groovy-xml-2.4.4.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\httpcomponents\httpclient\4.5.1\httpclient-4.5.1.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\httpcomponents\httpcore\4.4.3\httpcore-4.4.3.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\httpcomponents\httpmime\4.5.1\httpmime-4.5.1.jar;C:\Users\WinstonEvans\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\WinstonEvans\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\groovy\groovy-json\2.4.4\groovy-json-2.4.4.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\rest-assured-common\2.9.0\rest-assured-common-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\xml-path\2.9.0\xml-path-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;C:\Users\WinstonEvans\.m2\repository\org\assertj\assertj-core\3.2.0\assertj-core-3.2.0.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-test\4.3.8.RELEASE\spring-test-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\dbunit\dbunit\2.5.1\dbunit-2.5.1.jar;C:\Users\WinstonEvans\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\WinstonEvans\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\poi\poi-ooxml\3.11\poi-ooxml-3.11.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\poi\poi\3.11\poi-3.11.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.11\poi-ooxml-schemas-3.11.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\WinstonEvans\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\WinstonEvans\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.2.1\spring-test-dbunit-1.2.1.jar;C:\Users\WinstonEvans\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-webmvc\4.3.8.RELEASE\spring-webmvc-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-aop\4.3.8.RELEASE\spring-aop-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-expression\4.3.8.RELEASE\spring-expression-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-web\4.3.8.RELEASE\spring-web-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-core\4.3.8.RELEASE\spring-core-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-context\4.3.8.RELEASE\spring-context-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-beans\4.3.8.RELEASE\spring-beans-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\oauth\spring-security-oauth2\2.1.1.RELEASE\spring-security-oauth2-2.1.1.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\spring-security-core\3.2.10.RELEASE\spring-security-core-3.2.10.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\spring-security-config\3.2.10.RELEASE\spring-security-config-3.2.10.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\spring-security-web\3.2.10.RELEASE\spring-security-web-3.2.10.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\hibernate-core\4.3.5.Final\hibernate-core-4.3.5.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\WinstonEvans\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\WinstonEvans\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\WinstonEvans\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.5.Final\hibernate-entitymanager-4.3.5.Final.jar;C:\Users\WinstonEvans\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\WinstonEvans\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-orm\4.3.8.RELEASE\spring-orm-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-tx\4.3.8.RELEASE\spring-tx-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\aspectj\aspectjrt\1.7.4\aspectjrt-1.7.4.jar;C:\Users\WinstonEvans\.m2\repository\mysql\mysql-connector-java\5.1.39\mysql-connector-java-5.1.39.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-jdbc\4.3.8.RELEASE\spring-jdbc-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\WinstonEvans\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.8\jackson-databind-2.8.8.jar;C:\Users\WinstonEvans\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\WinstonEvans\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.8\jackson-core-2.8.8.jar;C:\Users\WinstonEvans\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\WinstonEvans, user.timezone=America/Caracas, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1252, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.DriverManagerDataSource@7e5c856f, hibernate.format_sql=true, user.name=WinstonEvans, java.class.path=C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\test-classes;C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\classes;C:\Users\WinstonEvans\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\WinstonEvans\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\WinstonEvans\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\WinstonEvans\.m2\repository\com\google\code\gson\gson\2.6.2\gson-2.6.2.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\rest-assured\2.9.0\rest-assured-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\groovy\groovy\2.4.4\groovy-2.4.4.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\groovy\groovy-xml\2.4.4\groovy-xml-2.4.4.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\httpcomponents\httpclient\4.5.1\httpclient-4.5.1.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\httpcomponents\httpcore\4.4.3\httpcore-4.4.3.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\httpcomponents\httpmime\4.5.1\httpmime-4.5.1.jar;C:\Users\WinstonEvans\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\WinstonEvans\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\groovy\groovy-json\2.4.4\groovy-json-2.4.4.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\rest-assured-common\2.9.0\rest-assured-common-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\com\jayway\restassured\xml-path\2.9.0\xml-path-2.9.0.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;C:\Users\WinstonEvans\.m2\repository\org\assertj\assertj-core\3.2.0\assertj-core-3.2.0.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-test\4.3.8.RELEASE\spring-test-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\dbunit\dbunit\2.5.1\dbunit-2.5.1.jar;C:\Users\WinstonEvans\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\WinstonEvans\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\poi\poi-ooxml\3.11\poi-ooxml-3.11.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\poi\poi\3.11\poi-3.11.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.11\poi-ooxml-schemas-3.11.jar;C:\Users\WinstonEvans\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\WinstonEvans\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\WinstonEvans\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.2.1\spring-test-dbunit-1.2.1.jar;C:\Users\WinstonEvans\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-webmvc\4.3.8.RELEASE\spring-webmvc-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-aop\4.3.8.RELEASE\spring-aop-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-expression\4.3.8.RELEASE\spring-expression-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-web\4.3.8.RELEASE\spring-web-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-core\4.3.8.RELEASE\spring-core-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-context\4.3.8.RELEASE\spring-context-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-beans\4.3.8.RELEASE\spring-beans-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\oauth\spring-security-oauth2\2.1.1.RELEASE\spring-security-oauth2-2.1.1.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\spring-security-core\3.2.10.RELEASE\spring-security-core-3.2.10.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\spring-security-config\3.2.10.RELEASE\spring-security-config-3.2.10.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\security\spring-security-web\3.2.10.RELEASE\spring-security-web-3.2.10.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\WinstonEvans\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\hibernate-core\4.3.5.Final\hibernate-core-4.3.5.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\WinstonEvans\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\WinstonEvans\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\WinstonEvans\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\WinstonEvans\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\WinstonEvans\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.5.Final\hibernate-entitymanager-4.3.5.Final.jar;C:\Users\WinstonEvans\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\WinstonEvans\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-orm\4.3.8.RELEASE\spring-orm-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-tx\4.3.8.RELEASE\spring-tx-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\org\aspectj\aspectjrt\1.7.4\aspectjrt-1.7.4.jar;C:\Users\WinstonEvans\.m2\repository\mysql\mysql-connector-java\5.1.39\mysql-connector-java-5.1.39.jar;C:\Users\WinstonEvans\.m2\repository\org\springframework\spring-jdbc\4.3.8.RELEASE\spring-jdbc-4.3.8.RELEASE.jar;C:\Users\WinstonEvans\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\WinstonEvans\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.8\jackson-databind-2.8.8.jar;C:\Users\WinstonEvans\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\WinstonEvans\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.8\jackson-core-2.8.8.jar;C:\Users\WinstonEvans\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, sun.java.command=C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\surefire\surefirebooter9099903340762697194.jar C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\surefire\surefire8382094110293693688tmp C:\Users\WinstonEvans\workspace\valero-spring-webapp\target\surefire\surefire_03757494343523244684tmp, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_121, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\WinstonEvans\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Setting dialect [org.hibernate.dialect.MySQL5Dialect]
Static SQL for collection: com.govansnv.fuel.model.Company.customers
 Row insert: update Customer set company_id=? where id=?
 Row update: update Customer set  where id=?
 Row delete: update Customer set company_id=null where company_id=? and id=?
 One-shot delete: update Customer set company_id=null where company_id=?
Static SQL for collection: com.govansnv.fuel.model.Department.devices
 Row insert: update Device set department_id=? where id=?
 Row update: update Device set  where id=?
 Row delete: update Device set department_id=null where department_id=? and id=?
 One-shot delete: update Device set department_id=null where department_id=?
Static SQL for collection: com.govansnv.fuel.model.Company.departments
 Row insert: update department set company_id=? where id=?
 Row update: update department set  where id=?
 Row delete: update department set company_id=null where company_id=? and id=?
 One-shot delete: update department set company_id=null where company_id=?
Static SQL for entity: com.govansnv.fuel.model.Device
 Version select: select id from Device where id =?
 Snapshot select: select device_.id, device_.department_id as departme4_2_, device_.device_no as device_n2_2_, device_.last_synch as last_syn3_2_ from Device device_ where device_.id=?
 Insert 0: insert into Device (department_id, device_no, last_synch, id) values (?, ?, ?, ?)
 Update 0: update Device set department_id=?, device_no=?, last_synch=? where id=?
 Delete 0: delete from Device where id=?
 Identity insert: insert into Device (department_id, device_no, last_synch) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c37bd27]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eed0f5]
Visiting attribute path : department.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3766c667]
Visiting attribute path : department.company.addres
Visiting attribute path : department.company.city
Visiting attribute path : department.company.companyName
Visiting attribute path : department.company.customers
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a022576]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529cfee5]
Visiting attribute path : department.company.departments
Property path deemed to be circular : department.company.departments
Visiting attribute path : department.company.fax
Visiting attribute path : department.company.phone
Visiting attribute path : department.company.postalCode
Visiting attribute path : department.company.slogan
Visiting attribute path : department.departmentName
Visiting attribute path : department.devices
Property path deemed to be circular : department.devices
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Device.department.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Device.department.company.customers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Device.department.company.customers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for entity com.govansnv.fuel.model.Device [NONE]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_, department1_.id as id1_5_1_, department1_.company_id as company_3_5_1_, department1_.department_name as departme2_5_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_ from Device device0_ left outer join department department1_ on device0_.department_id=department1_.id left outer join Company company2_ on department1_.company_id=company2_.id where device0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24fabd0f]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f3fbb8]
Visiting attribute path : department.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@432034a]
Visiting attribute path : department.company.addres
Visiting attribute path : department.company.city
Visiting attribute path : department.company.companyName
Visiting attribute path : department.company.customers
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60e5272]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d755813]
Visiting attribute path : department.company.departments
Property path deemed to be circular : department.company.departments
Visiting attribute path : department.company.fax
Visiting attribute path : department.company.phone
Visiting attribute path : department.company.postalCode
Visiting attribute path : department.company.slogan
Visiting attribute path : department.departmentName
Visiting attribute path : department.devices
Property path deemed to be circular : department.devices
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Device.department.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Device.department.company.customers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Device.department.company.customers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for entity com.govansnv.fuel.model.Device [READ]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_, department1_.id as id1_5_1_, department1_.company_id as company_3_5_1_, department1_.department_name as departme2_5_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_ from Device device0_ left outer join department department1_ on device0_.department_id=department1_.id left outer join Company company2_ on department1_.company_id=company2_.id where device0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c93ca4]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@173373b4]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [UPGRADE]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d10481]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b6319f]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [UPGRADE_NOWAIT]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9456ae]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f1cae23]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [UPGRADE_SKIPLOCKED]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c455e96]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bcde458]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [FORCE]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@215a34b4]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d3ab60]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [PESSIMISTIC_READ]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10876a6]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd91637]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [PESSIMISTIC_WRITE]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45792847]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e25147a]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [PESSIMISTIC_FORCE_INCREMENT]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b68cb27]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56303475]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [OPTIMISTIC]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30506c0d]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5631962]
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Device)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Device.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Device)
          - SQL table alias mapping - device0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity com.govansnv.fuel.model.Device [OPTIMISTIC_FORCE_INCREMENT]: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.Device: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.Device: select device0_.id as id1_2_0_, device0_.department_id as departme4_2_0_, device0_.device_no as device_n2_2_0_, device0_.last_synch as last_syn3_2_0_ from Device device0_ where device0_.id=?
Static SQL for entity: com.govansnv.fuel.model.Customer
 Version select: select id from Customer where id =?
 Snapshot select: select customer_.id, customer_.barcode as barcode2_1_, customer_.company_id as company_7_1_, customer_.customer_id as customer3_1_, customer_.customer_ship_to as customer4_1_, customer_.customer_sold_to as customer5_1_, customer_.ship_to as ship_to6_1_ from Customer customer_ where customer_.id=?
 Insert 0: insert into Customer (barcode, company_id, customer_id, customer_ship_to, customer_sold_to, ship_to, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update Customer set barcode=?, company_id=?, customer_id=?, customer_ship_to=?, customer_sold_to=?, ship_to=? where id=?
 Delete 0: delete from Customer where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e6cc850]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec58feb]
Visiting attribute path : company.addres
Visiting attribute path : company.city
Visiting attribute path : company.companyName
Visiting attribute path : company.customers
Property path deemed to be circular : company.customers
Visiting attribute path : company.departments
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@656d10a4]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63ec445c]
Visiting attribute path : company.departments.company
Property path deemed to be circular : company.departments.company
Visiting attribute path : company.departments.departmentName
Visiting attribute path : company.departments.devices
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48b22fd4]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a9d5dff]
Visiting attribute path : company.fax
Visiting attribute path : company.phone
Visiting attribute path : company.postalCode
Visiting attribute path : company.slogan
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Customer.company.departments)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Customer.company.departments.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Customer.company.departments.<elements>.devices)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Customer.company.departments.<elements>.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(company)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Company)
                - SQL table alias mapping - company1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(departments)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.govansnv.fuel.model.Company.departments)
                      - SQL table alias mapping - department2_
                      - alias suffix - 2_
                      - suffixed key columns - {company_3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_5_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.govansnv.fuel.model.Department)
                            - SQL table alias mapping - department2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_5_3_}

Static select for entity com.govansnv.fuel.model.Customer [NONE]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_, company1_.id as id1_0_1_, company1_.address as address2_0_1_, company1_.city as city3_0_1_, company1_.company_name as company_4_0_1_, company1_.fax as fax5_0_1_, company1_.phone as phone6_0_1_, company1_.postal_code as postal_c7_0_1_, company1_.slogan as slogan8_0_1_, department2_.company_id as company_3_0_2_, department2_.id as id1_5_2_, department2_.id as id1_5_3_, department2_.company_id as company_3_5_3_, department2_.department_name as departme2_5_3_ from Customer customer0_ left outer join Company company1_ on customer0_.company_id=company1_.id left outer join department department2_ on company1_.id=department2_.company_id where customer0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54f66455]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c03a37]
Visiting attribute path : company.addres
Visiting attribute path : company.city
Visiting attribute path : company.companyName
Visiting attribute path : company.customers
Property path deemed to be circular : company.customers
Visiting attribute path : company.departments
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49a71302]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cd61783]
Visiting attribute path : company.departments.company
Property path deemed to be circular : company.departments.company
Visiting attribute path : company.departments.departmentName
Visiting attribute path : company.departments.devices
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26e412ef]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae263bf]
Visiting attribute path : company.fax
Visiting attribute path : company.phone
Visiting attribute path : company.postalCode
Visiting attribute path : company.slogan
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Customer.company.departments)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Customer.company.departments.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Customer.company.departments.<elements>.devices)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Customer.company.departments.<elements>.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(company)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Company)
                - SQL table alias mapping - company1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(departments)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.govansnv.fuel.model.Company.departments)
                      - SQL table alias mapping - department2_
                      - alias suffix - 2_
                      - suffixed key columns - {company_3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_5_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.govansnv.fuel.model.Department)
                            - SQL table alias mapping - department2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_5_3_}

Static select for entity com.govansnv.fuel.model.Customer [READ]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_, company1_.id as id1_0_1_, company1_.address as address2_0_1_, company1_.city as city3_0_1_, company1_.company_name as company_4_0_1_, company1_.fax as fax5_0_1_, company1_.phone as phone6_0_1_, company1_.postal_code as postal_c7_0_1_, company1_.slogan as slogan8_0_1_, department2_.company_id as company_3_0_2_, department2_.id as id1_5_2_, department2_.id as id1_5_3_, department2_.company_id as company_3_5_3_, department2_.department_name as departme2_5_3_ from Customer customer0_ left outer join Company company1_ on customer0_.company_id=company1_.id left outer join department department2_ on company1_.id=department2_.company_id where customer0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7103ab0]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769d513]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [UPGRADE]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e4fa1da]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f92c349]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [UPGRADE_NOWAIT]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769a58e5]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be25526]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [UPGRADE_SKIPLOCKED]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ba7e45]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d200de]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [FORCE]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511505e7]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15fdd1f2]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [PESSIMISTIC_READ]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb0f763]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b1a8f6]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [PESSIMISTIC_WRITE]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a389173]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba89729]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [PESSIMISTIC_FORCE_INCREMENT]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178270b2]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b005a0b]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [OPTIMISTIC]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@141e879d]
Visiting attribute path : barcode
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1704f67f]
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Customer)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Customer.company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity com.govansnv.fuel.model.Customer [OPTIMISTIC_FORCE_INCREMENT]: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.Customer: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.Customer: select customer0_.id as id1_1_0_, customer0_.barcode as barcode2_1_0_, customer0_.company_id as company_7_1_0_, customer0_.customer_id as customer3_1_0_, customer0_.customer_ship_to as customer4_1_0_, customer0_.customer_sold_to as customer5_1_0_, customer0_.ship_to as ship_to6_1_0_ from Customer customer0_ where customer0_.id=?
Static SQL for entity: com.govansnv.fuel.model.PurchaseOrder
 Version select: select id from purchase_order where id =?
 Snapshot select: select purchaseor_.id, purchaseor_.customer_id as customer9_7_, purchaseor_.delivered_on as delivere2_7_, purchaseor_.fuel_name as fuel_nam3_7_, purchaseor_.fuel_price as fuel_pri4_7_, purchaseor_.purchase_date as purchase5_7_, purchaseor_.purchase_volume as purchase6_7_, purchaseor_.ticket_no as ticket_n7_7_, purchaseor_.truck_number as truck_nu8_7_ from purchase_order purchaseor_ where purchaseor_.id=?
 Insert 0: insert into purchase_order (customer_id, delivered_on, fuel_name, fuel_price, purchase_date, purchase_volume, ticket_no, truck_number, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update purchase_order set customer_id=?, delivered_on=?, fuel_name=?, fuel_price=?, purchase_date=?, purchase_volume=?, ticket_no=?, truck_number=? where id=?
 Delete 0: delete from purchase_order where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e4d2696]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15fb7a32]
Visiting attribute path : customer.barcode
Visiting attribute path : customer.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e22a53]
Visiting attribute path : customer.company.addres
Visiting attribute path : customer.company.city
Visiting attribute path : customer.company.companyName
Visiting attribute path : customer.company.customers
Property path deemed to be circular : customer.company.customers
Visiting attribute path : customer.company.departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1949309d]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af97169]
Visiting attribute path : customer.company.fax
Visiting attribute path : customer.company.phone
Visiting attribute path : customer.company.postalCode
Visiting attribute path : customer.company.slogan
Visiting attribute path : customer.customerId
Visiting attribute path : customer.customerShipTo
Visiting attribute path : customer.customerSoldTo
Visiting attribute path : customer.shipTo
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.PurchaseOrder.customer.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.PurchaseOrder.customer.company.departments)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.PurchaseOrder.customer.company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [NONE]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_, customer1_.id as id1_1_1_, customer1_.barcode as barcode2_1_1_, customer1_.company_id as company_7_1_1_, customer1_.customer_id as customer3_1_1_, customer1_.customer_ship_to as customer4_1_1_, customer1_.customer_sold_to as customer5_1_1_, customer1_.ship_to as ship_to6_1_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_ from purchase_order purchaseor0_ left outer join Customer customer1_ on purchaseor0_.customer_id=customer1_.id left outer join Company company2_ on customer1_.company_id=company2_.id where purchaseor0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a78d7]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c76850]
Visiting attribute path : customer.barcode
Visiting attribute path : customer.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a22ad2b]
Visiting attribute path : customer.company.addres
Visiting attribute path : customer.company.city
Visiting attribute path : customer.company.companyName
Visiting attribute path : customer.company.customers
Property path deemed to be circular : customer.company.customers
Visiting attribute path : customer.company.departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@121c54fa]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4390f46e]
Visiting attribute path : customer.company.fax
Visiting attribute path : customer.company.phone
Visiting attribute path : customer.company.postalCode
Visiting attribute path : customer.company.slogan
Visiting attribute path : customer.customerId
Visiting attribute path : customer.customerShipTo
Visiting attribute path : customer.customerSoldTo
Visiting attribute path : customer.shipTo
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.PurchaseOrder.customer.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.PurchaseOrder.customer.company.departments)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.PurchaseOrder.customer.company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [READ]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_, customer1_.id as id1_1_1_, customer1_.barcode as barcode2_1_1_, customer1_.company_id as company_7_1_1_, customer1_.customer_id as customer3_1_1_, customer1_.customer_ship_to as customer4_1_1_, customer1_.customer_sold_to as customer5_1_1_, customer1_.ship_to as ship_to6_1_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_ from purchase_order purchaseor0_ left outer join Customer customer1_ on purchaseor0_.customer_id=customer1_.id left outer join Company company2_ on customer1_.company_id=company2_.id where purchaseor0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c6442c2]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dbf5634]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [UPGRADE]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1948ea69]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49798e84]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [UPGRADE_NOWAIT]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed06f69]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@515ebef3]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [UPGRADE_SKIPLOCKED]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545607f2]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c04377]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [FORCE]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34dc85a]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a6482a9]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [PESSIMISTIC_READ]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9ab969]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@746cd757]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [PESSIMISTIC_WRITE]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae372b9]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b9d0c7]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [PESSIMISTIC_FORCE_INCREMENT]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65fd6708]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@127f9161]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [OPTIMISTIC]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bf94401]
Visiting attribute path : customer
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4349754]
Visiting attribute path : deliveredOn
Visiting attribute path : fuelName
Visiting attribute path : fuelPrice
Visiting attribute path : purchaseDate
Visiting attribute path : purchaseVolume
Visiting attribute path : ticketNo
Visiting attribute path : truckNumber
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.PurchaseOrder)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.PurchaseOrder, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.PurchaseOrder)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.PurchaseOrder.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.PurchaseOrder)
          - SQL table alias mapping - purchaseor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity com.govansnv.fuel.model.PurchaseOrder [OPTIMISTIC_FORCE_INCREMENT]: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.PurchaseOrder: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.PurchaseOrder: select purchaseor0_.id as id1_7_0_, purchaseor0_.customer_id as customer9_7_0_, purchaseor0_.delivered_on as delivere2_7_0_, purchaseor0_.fuel_name as fuel_nam3_7_0_, purchaseor0_.fuel_price as fuel_pri4_7_0_, purchaseor0_.purchase_date as purchase5_7_0_, purchaseor0_.purchase_volume as purchase6_7_0_, purchaseor0_.ticket_no as ticket_n7_7_0_, purchaseor0_.truck_number as truck_nu8_7_0_ from purchase_order purchaseor0_ where purchaseor0_.id=?
Static SQL for entity: com.govansnv.fuel.model.FuelDelivery
 Version select: select id from fuel_delivery where id =?
 Snapshot select: select fueldelive_.id, fueldelive_.company_name as company_2_6_, fueldelive_.device_id as device_11_6_, fueldelive_.extra_points as extra_po3_6_, fueldelive_.fuel_price as fuel_pri4_6_, fueldelive_.meter_close_one as meter_cl5_6_, fueldelive_.meter_close_two as meter_cl6_6_, fueldelive_.meter_open_one as meter_op7_6_, fueldelive_.meter_open_two as meter_op8_6_, fueldelive_.purchase_order_item as purchase9_6_, fueldelive_.total_fueled as total_f10_6_, fueldelive_.truck_id as truck_i12_6_ from fuel_delivery fueldelive_ where fueldelive_.id=?
 Insert 0: insert into fuel_delivery (company_name, device_id, extra_points, fuel_price, meter_close_one, meter_close_two, meter_open_one, meter_open_two, purchase_order_item, total_fueled, truck_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update fuel_delivery set company_name=?, device_id=?, extra_points=?, fuel_price=?, meter_close_one=?, meter_close_two=?, meter_open_one=?, meter_open_two=?, purchase_order_item=?, total_fueled=?, truck_id=? where id=?
 Delete 0: delete from fuel_delivery where id=?
 Identity insert: insert into fuel_delivery (company_name, device_id, extra_points, fuel_price, meter_close_one, meter_close_two, meter_open_one, meter_open_two, purchase_order_item, total_fueled, truck_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a2eea2a]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0ee03a]
Visiting attribute path : device.department
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c298dc]
Visiting attribute path : device.department.company
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@723ed581]
Visiting attribute path : device.department.departmentName
Visiting attribute path : device.department.devices
Property path deemed to be circular : device.department.devices
Visiting attribute path : device.deviceNo
Visiting attribute path : device.lastSynch
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b760460]
Visiting attribute path : truck.department
Property path deemed to be circular : truck.department
Visiting attribute path : truck.deviceNo
Visiting attribute path : truck.lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.device.department)
                - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.FuelDelivery.device.department.company)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(device)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Device)
                - SQL table alias mapping - device1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(department)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Department)
                      - SQL table alias mapping - department2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(truck)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.govansnv.fuel.model.Device)
                - SQL table alias mapping - device3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [NONE]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_, device1_.id as id1_2_1_, device1_.department_id as departme4_2_1_, device1_.device_no as device_n2_2_1_, device1_.last_synch as last_syn3_2_1_, department2_.id as id1_5_2_, department2_.company_id as company_3_5_2_, department2_.department_name as departme2_5_2_, device3_.id as id1_2_3_, device3_.department_id as departme4_2_3_, device3_.device_no as device_n2_2_3_, device3_.last_synch as last_syn3_2_3_ from fuel_delivery fueldelive0_ left outer join Device device1_ on fueldelive0_.device_id=device1_.id left outer join department department2_ on device1_.department_id=department2_.id left outer join Device device3_ on fueldelive0_.truck_id=device3_.id where fueldelive0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773e2eb5]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1436a7ab]
Visiting attribute path : device.department
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d36dff4]
Visiting attribute path : device.department.company
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b94ccbc]
Visiting attribute path : device.department.departmentName
Visiting attribute path : device.department.devices
Property path deemed to be circular : device.department.devices
Visiting attribute path : device.deviceNo
Visiting attribute path : device.lastSynch
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a1c423]
Visiting attribute path : truck.department
Property path deemed to be circular : truck.department
Visiting attribute path : truck.deviceNo
Visiting attribute path : truck.lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.device.department)
                - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.FuelDelivery.device.department.company)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(device)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Device)
                - SQL table alias mapping - device1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(department)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Department)
                      - SQL table alias mapping - department2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(truck)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.govansnv.fuel.model.Device)
                - SQL table alias mapping - device3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [READ]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_, device1_.id as id1_2_1_, device1_.department_id as departme4_2_1_, device1_.device_no as device_n2_2_1_, device1_.last_synch as last_syn3_2_1_, department2_.id as id1_5_2_, department2_.company_id as company_3_5_2_, department2_.department_name as departme2_5_2_, device3_.id as id1_2_3_, device3_.department_id as departme4_2_3_, device3_.device_no as device_n2_2_3_, device3_.last_synch as last_syn3_2_3_ from fuel_delivery fueldelive0_ left outer join Device device1_ on fueldelive0_.device_id=device1_.id left outer join department department2_ on device1_.department_id=department2_.id left outer join Device device3_ on fueldelive0_.truck_id=device3_.id where fueldelive0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38eb2fb0]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7351a16e]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb7643d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [UPGRADE]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac04654]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ed0918d]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e268ce6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [UPGRADE_NOWAIT]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ec9390]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0fbd3a]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@562457e1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [UPGRADE_SKIPLOCKED]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54562ea6]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b12012e]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7dcef2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [FORCE]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3be6a5]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3721177d]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766a4535]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [PESSIMISTIC_READ]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63718b93]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b4786dd]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f202d6d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [PESSIMISTIC_WRITE]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e21209]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@746b18fd]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2e0858]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [PESSIMISTIC_FORCE_INCREMENT]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aac3f4e]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df3c564]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2715644a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [OPTIMISTIC]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2869a9]
Visiting attribute path : companyName
Visiting attribute path : device
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e7dffa]
Visiting attribute path : extraPoints
Visiting attribute path : fuelPrice
Visiting attribute path : meterCloseOne
Visiting attribute path : meterCloseTwo
Visiting attribute path : meterOpenOne
Visiting attribute path : meterOpenTwo
Visiting attribute path : purchaseOrderItem
Visiting attribute path : totalFueled
Visiting attribute path : truck
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6edcd0d8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.FuelDelivery)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.FuelDelivery, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.FuelDelivery)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.FuelDelivery.device)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.FuelDelivery.truck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.FuelDelivery)
          - SQL table alias mapping - fueldelive0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity com.govansnv.fuel.model.FuelDelivery [OPTIMISTIC_FORCE_INCREMENT]: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.FuelDelivery: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.FuelDelivery: select fueldelive0_.id as id1_6_0_, fueldelive0_.company_name as company_2_6_0_, fueldelive0_.device_id as device_11_6_0_, fueldelive0_.extra_points as extra_po3_6_0_, fueldelive0_.fuel_price as fuel_pri4_6_0_, fueldelive0_.meter_close_one as meter_cl5_6_0_, fueldelive0_.meter_close_two as meter_cl6_6_0_, fueldelive0_.meter_open_one as meter_op7_6_0_, fueldelive0_.meter_open_two as meter_op8_6_0_, fueldelive0_.purchase_order_item as purchase9_6_0_, fueldelive0_.total_fueled as total_f10_6_0_, fueldelive0_.truck_id as truck_i12_6_0_ from fuel_delivery fueldelive0_ where fueldelive0_.id=?
Static SQL for entity: com.govansnv.fuel.model.Driver
 Version select: select id from Driver where id =?
 Snapshot select: select driver_.id, driver_.department_id as departme6_3_, driver_.firstname as firstnam2_3_, driver_.lastname as lastname3_3_, driver_.passnum as passnum4_3_, driver_.uname as uname5_3_ from Driver driver_ where driver_.id=?
 Insert 0: insert into Driver (department_id, firstname, lastname, passnum, uname, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update Driver set department_id=?, firstname=?, lastname=?, passnum=?, uname=? where id=?
 Delete 0: delete from Driver where id=?
 Identity insert: insert into Driver (department_id, firstname, lastname, passnum, uname) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6136998b]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a7e43]
Visiting attribute path : department.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f71edb]
Visiting attribute path : department.company.addres
Visiting attribute path : department.company.city
Visiting attribute path : department.company.companyName
Visiting attribute path : department.company.customers
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a27cb34]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6892cc6f]
Visiting attribute path : department.company.departments
Property path deemed to be circular : department.company.departments
Visiting attribute path : department.company.fax
Visiting attribute path : department.company.phone
Visiting attribute path : department.company.postalCode
Visiting attribute path : department.company.slogan
Visiting attribute path : department.departmentName
Visiting attribute path : department.devices
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fd1660]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c18ad]
Visiting attribute path : department.devices.department
Property path deemed to be circular : department.devices.department
Visiting attribute path : department.devices.deviceNo
Visiting attribute path : department.devices.lastSynch
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Driver.department.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Driver.department.company.customers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Driver.department.company.customers.<elements>)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Driver.department.devices)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:6>, path=com.govansnv.fuel.model.Driver.department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(devices)) : <gen:1> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.govansnv.fuel.model.Department.devices)
                      - SQL table alias mapping - devices3_
                      - alias suffix - 3_
                      - suffixed key columns - {departme4_5_3_}
                      - entity-element alias suffix - 4_
                      - 4_entity-element suffixed key columns - id1_2_4_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.govansnv.fuel.model.Device)
                            - SQL table alias mapping - devices3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}

Static select for entity com.govansnv.fuel.model.Driver [NONE]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_, department1_.id as id1_5_1_, department1_.company_id as company_3_5_1_, department1_.department_name as departme2_5_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_, devices3_.department_id as departme4_5_3_, devices3_.id as id1_2_3_, devices3_.id as id1_2_4_, devices3_.department_id as departme4_2_4_, devices3_.device_no as device_n2_2_4_, devices3_.last_synch as last_syn3_2_4_ from Driver driver0_ left outer join department department1_ on driver0_.department_id=department1_.id left outer join Company company2_ on department1_.company_id=company2_.id left outer join Device devices3_ on department1_.id=devices3_.department_id where driver0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2916c3]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae7950d]
Visiting attribute path : department.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66c83fc8]
Visiting attribute path : department.company.addres
Visiting attribute path : department.company.city
Visiting attribute path : department.company.companyName
Visiting attribute path : department.company.customers
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@621f89b8]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f339eae]
Visiting attribute path : department.company.departments
Property path deemed to be circular : department.company.departments
Visiting attribute path : department.company.fax
Visiting attribute path : department.company.phone
Visiting attribute path : department.company.postalCode
Visiting attribute path : department.company.slogan
Visiting attribute path : department.departmentName
Visiting attribute path : department.devices
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2822c6ff]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dafba3e]
Visiting attribute path : department.devices.department
Property path deemed to be circular : department.devices.department
Visiting attribute path : department.devices.deviceNo
Visiting attribute path : department.devices.lastSynch
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Driver.department.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Driver.department.company.customers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Driver.department.company.customers.<elements>)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Driver.department.devices)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:6>, path=com.govansnv.fuel.model.Driver.department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(devices)) : <gen:1> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.govansnv.fuel.model.Department.devices)
                      - SQL table alias mapping - devices3_
                      - alias suffix - 3_
                      - suffixed key columns - {departme4_5_3_}
                      - entity-element alias suffix - 4_
                      - 4_entity-element suffixed key columns - id1_2_4_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.govansnv.fuel.model.Device)
                            - SQL table alias mapping - devices3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}

Static select for entity com.govansnv.fuel.model.Driver [READ]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_, department1_.id as id1_5_1_, department1_.company_id as company_3_5_1_, department1_.department_name as departme2_5_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_, devices3_.department_id as departme4_5_3_, devices3_.id as id1_2_3_, devices3_.id as id1_2_4_, devices3_.department_id as departme4_2_4_, devices3_.device_no as device_n2_2_4_, devices3_.last_synch as last_syn3_2_4_ from Driver driver0_ left outer join department department1_ on driver0_.department_id=department1_.id left outer join Company company2_ on department1_.company_id=company2_.id left outer join Device devices3_ on department1_.id=devices3_.department_id where driver0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e9da981]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d43fe]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [UPGRADE]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ad8d05]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ff8fc9]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [UPGRADE_NOWAIT]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fb7183b]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f80fa43]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [UPGRADE_SKIPLOCKED]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c8b7bd]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65bcf7c2]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [FORCE]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db64bd4]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@576c5536]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [PESSIMISTIC_READ]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ecbafe]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c2eacb]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [PESSIMISTIC_WRITE]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@232cce0]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352e787a]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [PESSIMISTIC_FORCE_INCREMENT]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159a48a6]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e75bf2d]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [OPTIMISTIC]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@385ef531]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205b132e]
Visiting attribute path : firstname
Visiting attribute path : lastname
Visiting attribute path : passnum
Visiting attribute path : uname
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Driver)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Driver, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Driver)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Driver.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity com.govansnv.fuel.model.Driver [OPTIMISTIC_FORCE_INCREMENT]: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.Driver: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.Driver: select driver0_.id as id1_3_0_, driver0_.department_id as departme6_3_0_, driver0_.firstname as firstnam2_3_0_, driver0_.lastname as lastname3_3_0_, driver0_.passnum as passnum4_3_0_, driver0_.uname as uname5_3_0_ from Driver driver0_ where driver0_.id=?
Static SQL for entity: com.govansnv.fuel.model.Company
 Version select: select id from Company where id =?
 Snapshot select: select company_.id, company_.address as address2_0_, company_.city as city3_0_, company_.company_name as company_4_0_, company_.fax as fax5_0_, company_.phone as phone6_0_, company_.postal_code as postal_c7_0_, company_.slogan as slogan8_0_ from Company company_ where company_.id=?
 Insert 0: insert into Company (address, city, company_name, fax, phone, postal_code, slogan, id) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update Company set address=?, city=?, company_name=?, fax=?, phone=?, postal_code=?, slogan=? where id=?
 Delete 0: delete from Company where id=?
 Identity insert: insert into Company (address, city, company_name, fax, phone, postal_code, slogan) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73044cdf]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@719843e5]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a2ec9b]
Visiting attribute path : customers.barcode
Visiting attribute path : customers.company
Property path deemed to be circular : customers.company
Visiting attribute path : customers.customerId
Visiting attribute path : customers.customerShipTo
Visiting attribute path : customers.customerSoldTo
Visiting attribute path : customers.shipTo
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3104f7bd]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5c1332]
Visiting attribute path : departments.company
Property path deemed to be circular : departments.company
Visiting attribute path : departments.departmentName
Visiting attribute path : departments.devices
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a84bc3f]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@258ee7de]
Visiting attribute path : departments.devices.department
Property path deemed to be circular : departments.devices.department
Visiting attribute path : departments.devices.deviceNo
Visiting attribute path : departments.devices.lastSynch
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Company.departments.<elements>.devices)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:6>, path=com.govansnv.fuel.model.Company.departments.<elements>.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(customers)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.govansnv.fuel.model.Company.customers)
                - SQL table alias mapping - customers1_
                - alias suffix - 1_
                - suffixed key columns - {company_7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Customer)
                      - SQL table alias mapping - customers1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(departments)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.govansnv.fuel.model.Company.departments)
                - SQL table alias mapping - department2_
                - alias suffix - 3_
                - suffixed key columns - {company_3_0_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_5_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.govansnv.fuel.model.Department)
                      - SQL table alias mapping - department2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_5_4_}
                      - JOIN (JoinDefinedByMetadata(devices)) : <gen:4> -> <gen:5>
                         - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.govansnv.fuel.model.Department.devices)
                            - SQL table alias mapping - devices3_
                            - alias suffix - 5_
                            - suffixed key columns - {departme4_5_5_}
                            - entity-element alias suffix - 6_
                            - 6_entity-element suffixed key columns - id1_2_6_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                               - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.govansnv.fuel.model.Device)
                                  - SQL table alias mapping - devices3_
                                  - alias suffix - 6_
                                  - suffixed key columns - {id1_2_6_}

Static select for entity com.govansnv.fuel.model.Company [NONE]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_, customers1_.company_id as company_7_0_1_, customers1_.id as id1_1_1_, customers1_.id as id1_1_2_, customers1_.barcode as barcode2_1_2_, customers1_.company_id as company_7_1_2_, customers1_.customer_id as customer3_1_2_, customers1_.customer_ship_to as customer4_1_2_, customers1_.customer_sold_to as customer5_1_2_, customers1_.ship_to as ship_to6_1_2_, department2_.company_id as company_3_0_3_, department2_.id as id1_5_3_, department2_.id as id1_5_4_, department2_.company_id as company_3_5_4_, department2_.department_name as departme2_5_4_, devices3_.department_id as departme4_5_5_, devices3_.id as id1_2_5_, devices3_.id as id1_2_6_, devices3_.department_id as departme4_2_6_, devices3_.device_no as device_n2_2_6_, devices3_.last_synch as last_syn3_2_6_ from Company company0_ left outer join Customer customers1_ on company0_.id=customers1_.company_id left outer join department department2_ on company0_.id=department2_.company_id left outer join Device devices3_ on department2_.id=devices3_.department_id where company0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bd2039]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bb8aabc]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1d4137]
Visiting attribute path : customers.barcode
Visiting attribute path : customers.company
Property path deemed to be circular : customers.company
Visiting attribute path : customers.customerId
Visiting attribute path : customers.customerShipTo
Visiting attribute path : customers.customerSoldTo
Visiting attribute path : customers.shipTo
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b75756]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5327a06e]
Visiting attribute path : departments.company
Property path deemed to be circular : departments.company
Visiting attribute path : departments.departmentName
Visiting attribute path : departments.devices
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@451f87af]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b556bb2]
Visiting attribute path : departments.devices.department
Property path deemed to be circular : departments.devices.department
Visiting attribute path : departments.devices.deviceNo
Visiting attribute path : departments.devices.lastSynch
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Company.departments.<elements>.devices)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:6>, path=com.govansnv.fuel.model.Company.departments.<elements>.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(customers)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.govansnv.fuel.model.Company.customers)
                - SQL table alias mapping - customers1_
                - alias suffix - 1_
                - suffixed key columns - {company_7_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Customer)
                      - SQL table alias mapping - customers1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(departments)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.govansnv.fuel.model.Company.departments)
                - SQL table alias mapping - department2_
                - alias suffix - 3_
                - suffixed key columns - {company_3_0_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_5_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.govansnv.fuel.model.Department)
                      - SQL table alias mapping - department2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_5_4_}
                      - JOIN (JoinDefinedByMetadata(devices)) : <gen:4> -> <gen:5>
                         - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.govansnv.fuel.model.Department.devices)
                            - SQL table alias mapping - devices3_
                            - alias suffix - 5_
                            - suffixed key columns - {departme4_5_5_}
                            - entity-element alias suffix - 6_
                            - 6_entity-element suffixed key columns - id1_2_6_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                               - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.govansnv.fuel.model.Device)
                                  - SQL table alias mapping - devices3_
                                  - alias suffix - 6_
                                  - suffixed key columns - {id1_2_6_}

Static select for entity com.govansnv.fuel.model.Company [READ]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_, customers1_.company_id as company_7_0_1_, customers1_.id as id1_1_1_, customers1_.id as id1_1_2_, customers1_.barcode as barcode2_1_2_, customers1_.company_id as company_7_1_2_, customers1_.customer_id as customer3_1_2_, customers1_.customer_ship_to as customer4_1_2_, customers1_.customer_sold_to as customer5_1_2_, customers1_.ship_to as ship_to6_1_2_, department2_.company_id as company_3_0_3_, department2_.id as id1_5_3_, department2_.id as id1_5_4_, department2_.company_id as company_3_5_4_, department2_.department_name as departme2_5_4_, devices3_.department_id as departme4_5_5_, devices3_.id as id1_2_5_, devices3_.id as id1_2_6_, devices3_.department_id as departme4_2_6_, devices3_.device_no as device_n2_2_6_, devices3_.last_synch as last_syn3_2_6_ from Company company0_ left outer join Customer customers1_ on company0_.id=customers1_.company_id left outer join department department2_ on company0_.id=department2_.company_id left outer join Device devices3_ on department2_.id=devices3_.department_id where company0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3cdec2]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3051e0b2]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f52eb6f]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57d0fc89]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58294867]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [UPGRADE]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c277a0]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fa76c61]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d5f7182]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59546cfe]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29ea78b1]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [UPGRADE_NOWAIT]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d2acd89]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e6dad8]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3315a5]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8ed9cf]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f72203]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [UPGRADE_SKIPLOCKED]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377008df]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22bb5646]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be59f28]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ce45a7b]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@153d4abb]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [FORCE]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4c273c]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@545e57d7]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc9a775]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27b000f7]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f9c19a]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [PESSIMISTIC_READ]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64bfd6fd]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@253b380a]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29c2c826]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3350ebdd]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6818d900]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [PESSIMISTIC_WRITE]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@149f5761]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f193686]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e72cbc]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fad41be]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dcd5639]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [PESSIMISTIC_FORCE_INCREMENT]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b36e000]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@629ae7e]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d25c1c]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@de88ac6]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bca7664]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [OPTIMISTIC]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@105b693d]
Visiting attribute path : addres
Visiting attribute path : city
Visiting attribute path : companyName
Visiting attribute path : customers
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a0df195]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fcc7e6]
Visiting attribute path : departments
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9255c05]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da7cee2]
Visiting attribute path : fax
Visiting attribute path : phone
Visiting attribute path : postalCode
Visiting attribute path : slogan
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Company)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Company.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Company.departments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Company.departments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.govansnv.fuel.model.Company [OPTIMISTIC_FORCE_INCREMENT]: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.Company: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.Company: select company0_.id as id1_0_0_, company0_.address as address2_0_0_, company0_.city as city3_0_0_, company0_.company_name as company_4_0_0_, company0_.fax as fax5_0_0_, company0_.phone as phone6_0_0_, company0_.postal_code as postal_c7_0_0_, company0_.slogan as slogan8_0_0_ from Company company0_ where company0_.id=?
Static SQL for entity: com.govansnv.fuel.model.Department
 Version select: select id from department where id =?
 Snapshot select: select department_.id, department_.company_id as company_3_5_, department_.department_name as departme2_5_ from department department_ where department_.id=?
 Insert 0: insert into department (company_id, department_name, id) values (?, ?, ?)
 Update 0: update department set company_id=?, department_name=? where id=?
 Delete 0: delete from department where id=?
 Identity insert: insert into department (company_id, department_name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78830d9a]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f829c76]
Visiting attribute path : company.addres
Visiting attribute path : company.city
Visiting attribute path : company.companyName
Visiting attribute path : company.customers
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c3ebc6b]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1931d99]
Visiting attribute path : company.customers.barcode
Visiting attribute path : company.customers.company
Property path deemed to be circular : company.customers.company
Visiting attribute path : company.customers.customerId
Visiting attribute path : company.customers.customerShipTo
Visiting attribute path : company.customers.customerSoldTo
Visiting attribute path : company.customers.shipTo
Visiting attribute path : company.departments
Property path deemed to be circular : company.departments
Visiting attribute path : company.fax
Visiting attribute path : company.phone
Visiting attribute path : company.postalCode
Visiting attribute path : company.slogan
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73017a80]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae7deac]
Visiting attribute path : devices.department
Property path deemed to be circular : devices.department
Visiting attribute path : devices.deviceNo
Visiting attribute path : devices.lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.company.customers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(company)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Company)
                - SQL table alias mapping - company1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(customers)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.govansnv.fuel.model.Company.customers)
                      - SQL table alias mapping - customers2_
                      - alias suffix - 2_
                      - suffixed key columns - {company_7_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.govansnv.fuel.model.Customer)
                            - SQL table alias mapping - customers2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
          - JOIN (JoinDefinedByMetadata(devices)) : <gen:0> -> <gen:4>
             - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.govansnv.fuel.model.Department.devices)
                - SQL table alias mapping - devices3_
                - alias suffix - 4_
                - suffixed key columns - {departme4_5_4_}
                - entity-element alias suffix - 5_
                - 5_entity-element suffixed key columns - id1_2_5_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.govansnv.fuel.model.Device)
                      - SQL table alias mapping - devices3_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_2_5_}

Static select for entity com.govansnv.fuel.model.Department [NONE]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_, company1_.id as id1_0_1_, company1_.address as address2_0_1_, company1_.city as city3_0_1_, company1_.company_name as company_4_0_1_, company1_.fax as fax5_0_1_, company1_.phone as phone6_0_1_, company1_.postal_code as postal_c7_0_1_, company1_.slogan as slogan8_0_1_, customers2_.company_id as company_7_0_2_, customers2_.id as id1_1_2_, customers2_.id as id1_1_3_, customers2_.barcode as barcode2_1_3_, customers2_.company_id as company_7_1_3_, customers2_.customer_id as customer3_1_3_, customers2_.customer_ship_to as customer4_1_3_, customers2_.customer_sold_to as customer5_1_3_, customers2_.ship_to as ship_to6_1_3_, devices3_.department_id as departme4_5_4_, devices3_.id as id1_2_4_, devices3_.id as id1_2_5_, devices3_.department_id as departme4_2_5_, devices3_.device_no as device_n2_2_5_, devices3_.last_synch as last_syn3_2_5_ from department department0_ left outer join Company company1_ on department0_.company_id=company1_.id left outer join Customer customers2_ on company1_.id=customers2_.company_id left outer join Device devices3_ on department0_.id=devices3_.department_id where department0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6293e39e]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a0ef00]
Visiting attribute path : company.addres
Visiting attribute path : company.city
Visiting attribute path : company.companyName
Visiting attribute path : company.customers
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21fdfefc]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3daa82be]
Visiting attribute path : company.customers.barcode
Visiting attribute path : company.customers.company
Property path deemed to be circular : company.customers.company
Visiting attribute path : company.customers.customerId
Visiting attribute path : company.customers.customerShipTo
Visiting attribute path : company.customers.customerSoldTo
Visiting attribute path : company.customers.shipTo
Visiting attribute path : company.departments
Property path deemed to be circular : company.departments
Visiting attribute path : company.fax
Visiting attribute path : company.phone
Visiting attribute path : company.postalCode
Visiting attribute path : company.slogan
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67e28be3]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e344ad3]
Visiting attribute path : devices.department
Property path deemed to be circular : devices.department
Visiting attribute path : devices.deviceNo
Visiting attribute path : devices.lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.company.customers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.company.customers.<elements>)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(company)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Company)
                - SQL table alias mapping - company1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(customers)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.govansnv.fuel.model.Company.customers)
                      - SQL table alias mapping - customers2_
                      - alias suffix - 2_
                      - suffixed key columns - {company_7_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.govansnv.fuel.model.Customer)
                            - SQL table alias mapping - customers2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
          - JOIN (JoinDefinedByMetadata(devices)) : <gen:0> -> <gen:4>
             - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.govansnv.fuel.model.Department.devices)
                - SQL table alias mapping - devices3_
                - alias suffix - 4_
                - suffixed key columns - {departme4_5_4_}
                - entity-element alias suffix - 5_
                - 5_entity-element suffixed key columns - id1_2_5_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.govansnv.fuel.model.Device)
                      - SQL table alias mapping - devices3_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_2_5_}

Static select for entity com.govansnv.fuel.model.Department [READ]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_, company1_.id as id1_0_1_, company1_.address as address2_0_1_, company1_.city as city3_0_1_, company1_.company_name as company_4_0_1_, company1_.fax as fax5_0_1_, company1_.phone as phone6_0_1_, company1_.postal_code as postal_c7_0_1_, company1_.slogan as slogan8_0_1_, customers2_.company_id as company_7_0_2_, customers2_.id as id1_1_2_, customers2_.id as id1_1_3_, customers2_.barcode as barcode2_1_3_, customers2_.company_id as company_7_1_3_, customers2_.customer_id as customer3_1_3_, customers2_.customer_ship_to as customer4_1_3_, customers2_.customer_sold_to as customer5_1_3_, customers2_.ship_to as ship_to6_1_3_, devices3_.department_id as departme4_5_4_, devices3_.id as id1_2_4_, devices3_.id as id1_2_5_, devices3_.department_id as departme4_2_5_, devices3_.device_no as device_n2_2_5_, devices3_.last_synch as last_syn3_2_5_ from department department0_ left outer join Company company1_ on department0_.company_id=company1_.id left outer join Customer customers2_ on company1_.id=customers2_.company_id left outer join Device devices3_ on department0_.id=devices3_.department_id where department0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6345e7b9]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e904fd5]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b18c4]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cbf4f53]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [UPGRADE]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@597f48df]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d48bd85]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bbbb6a8]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a120b0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [UPGRADE_NOWAIT]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27d57a2c]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d1a267]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58a4a74d]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54aca26f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314ed053]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@486bc9a4]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7965a51c]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eee3e2b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [FORCE]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f63e3c7]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dca2615]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@421a4ee1]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1237e0be]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [PESSIMISTIC_READ]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@528f8f8b]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e54cb33]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33cbfa57]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d96d872]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c748168]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@834831b]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@234a8f27]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4d25e7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c2affc]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0659ac]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58d63b16]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4fc2bf]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [OPTIMISTIC]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7772054c]
Visiting attribute path : company
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46866946]
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44de0113]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236134a1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Department)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Department.company)
          - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Department.devices)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.govansnv.fuel.model.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.Department: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.Department: select department0_.id as id1_5_0_, department0_.company_id as company_3_5_0_, department0_.department_name as departme2_5_0_ from department department0_ where department0_.id=?
Static SQL for entity: com.govansnv.fuel.model.Truck
 Version select: select id from Truck where id =?
 Snapshot select: select truck_.id, truck_.department_id as departme5_4_, truck_.number_of_meters as number_o2_4_, truck_.truck_code as truck_co3_4_, truck_.truck_volume as truck_vo4_4_ from Truck truck_ where truck_.id=?
 Insert 0: insert into Truck (department_id, number_of_meters, truck_code, truck_volume, id) values (?, ?, ?, ?, ?)
 Update 0: update Truck set department_id=?, number_of_meters=?, truck_code=?, truck_volume=? where id=?
 Delete 0: delete from Truck where id=?
 Identity insert: insert into Truck (department_id, number_of_meters, truck_code, truck_volume) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@369c9bb]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b21d99]
Visiting attribute path : department.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b5c5e3]
Visiting attribute path : department.company.addres
Visiting attribute path : department.company.city
Visiting attribute path : department.company.companyName
Visiting attribute path : department.company.customers
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37b72ea]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cc239ba]
Visiting attribute path : department.company.departments
Property path deemed to be circular : department.company.departments
Visiting attribute path : department.company.fax
Visiting attribute path : department.company.phone
Visiting attribute path : department.company.postalCode
Visiting attribute path : department.company.slogan
Visiting attribute path : department.departmentName
Visiting attribute path : department.devices
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d37f1c]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d6a7cd]
Visiting attribute path : department.devices.department
Property path deemed to be circular : department.devices.department
Visiting attribute path : department.devices.deviceNo
Visiting attribute path : department.devices.lastSynch
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Truck.department.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Truck.department.company.customers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Truck.department.company.customers.<elements>)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Truck.department.devices)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:6>, path=com.govansnv.fuel.model.Truck.department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(devices)) : <gen:1> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.govansnv.fuel.model.Department.devices)
                      - SQL table alias mapping - devices3_
                      - alias suffix - 3_
                      - suffixed key columns - {departme4_5_3_}
                      - entity-element alias suffix - 4_
                      - 4_entity-element suffixed key columns - id1_2_4_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.govansnv.fuel.model.Device)
                            - SQL table alias mapping - devices3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}

Static select for entity com.govansnv.fuel.model.Truck [NONE]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_, department1_.id as id1_5_1_, department1_.company_id as company_3_5_1_, department1_.department_name as departme2_5_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_, devices3_.department_id as departme4_5_3_, devices3_.id as id1_2_3_, devices3_.id as id1_2_4_, devices3_.department_id as departme4_2_4_, devices3_.device_no as device_n2_2_4_, devices3_.last_synch as last_syn3_2_4_ from Truck truck0_ left outer join department department1_ on truck0_.department_id=department1_.id left outer join Company company2_ on department1_.company_id=company2_.id left outer join Device devices3_ on department1_.id=devices3_.department_id where truck0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3047254d]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e92466a]
Visiting attribute path : department.company
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0cb5a1]
Visiting attribute path : department.company.addres
Visiting attribute path : department.company.city
Visiting attribute path : department.company.companyName
Visiting attribute path : department.company.customers
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47547132]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655523dd]
Visiting attribute path : department.company.departments
Property path deemed to be circular : department.company.departments
Visiting attribute path : department.company.fax
Visiting attribute path : department.company.phone
Visiting attribute path : department.company.postalCode
Visiting attribute path : department.company.slogan
Visiting attribute path : department.departmentName
Visiting attribute path : department.devices
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f7e336b]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a2b2322]
Visiting attribute path : department.devices.department
Property path deemed to be circular : department.devices.department
Visiting attribute path : department.devices.deviceNo
Visiting attribute path : department.devices.lastSynch
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
             - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Company, querySpaceUid=<gen:2>, path=com.govansnv.fuel.model.Truck.department.company)
                - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:3>, path=com.govansnv.fuel.model.Truck.department.company.customers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:4>, path=com.govansnv.fuel.model.Truck.department.company.customers.<elements>)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:5>, path=com.govansnv.fuel.model.Truck.department.devices)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:6>, path=com.govansnv.fuel.model.Truck.department.devices.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(company)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.govansnv.fuel.model.Company)
                      - SQL table alias mapping - company2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(devices)) : <gen:1> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.govansnv.fuel.model.Department.devices)
                      - SQL table alias mapping - devices3_
                      - alias suffix - 3_
                      - suffixed key columns - {departme4_5_3_}
                      - entity-element alias suffix - 4_
                      - 4_entity-element suffixed key columns - id1_2_4_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.govansnv.fuel.model.Device)
                            - SQL table alias mapping - devices3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}

Static select for entity com.govansnv.fuel.model.Truck [READ]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_, department1_.id as id1_5_1_, department1_.company_id as company_3_5_1_, department1_.department_name as departme2_5_1_, company2_.id as id1_0_2_, company2_.address as address2_0_2_, company2_.city as city3_0_2_, company2_.company_name as company_4_0_2_, company2_.fax as fax5_0_2_, company2_.phone as phone6_0_2_, company2_.postal_code as postal_c7_0_2_, company2_.slogan as slogan8_0_2_, devices3_.department_id as departme4_5_3_, devices3_.id as id1_2_3_, devices3_.id as id1_2_4_, devices3_.department_id as departme4_2_4_, devices3_.device_no as device_n2_2_4_, devices3_.last_synch as last_syn3_2_4_ from Truck truck0_ left outer join department department1_ on truck0_.department_id=department1_.id left outer join Company company2_ on department1_.company_id=company2_.id left outer join Device devices3_ on department1_.id=devices3_.department_id where truck0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6e0f32]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a66d45]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [UPGRADE]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f966492]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7428de63]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [UPGRADE_NOWAIT]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f659e6]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46678e49]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [UPGRADE_SKIPLOCKED]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@748e9b20]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a9bc08f]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [FORCE]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50f40653]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e57b5e9]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [PESSIMISTIC_READ]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1abc9f14]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e08d59]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [PESSIMISTIC_WRITE]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cb9cd1]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35636217]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [PESSIMISTIC_FORCE_INCREMENT]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1549bba7]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38704ff0]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [OPTIMISTIC]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ade133]
Visiting attribute path : department
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6a6c1d]
Visiting attribute path : numberOfMeters
Visiting attribute path : truckCode
Visiting attribute path : truckVolume
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.govansnv.fuel.model.Truck)
    - Returns
       - EntityReturnImpl(entity=com.govansnv.fuel.model.Truck, querySpaceUid=<gen:0>, path=com.govansnv.fuel.model.Truck)
          - EntityAttributeFetchImpl(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=com.govansnv.fuel.model.Truck.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.govansnv.fuel.model.Truck)
          - SQL table alias mapping - truck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity com.govansnv.fuel.model.Truck [OPTIMISTIC_FORCE_INCREMENT]: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=?
Static select for action ACTION_MERGE on entity com.govansnv.fuel.model.Truck: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=?
Static select for action ACTION_REFRESH on entity com.govansnv.fuel.model.Truck: select truck0_.id as id1_4_0_, truck0_.department_id as departme5_4_0_, truck0_.number_of_meters as number_o2_4_0_, truck0_.truck_code as truck_co3_4_0_, truck0_.truck_volume as truck_vo4_4_0_ from Truck truck0_ where truck0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cb2651f]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4441d567]
Visiting attribute path : barcode
Visiting attribute path : company
Property path deemed to be circular : company
Visiting attribute path : customerId
Visiting attribute path : customerShipTo
Visiting attribute path : customerSoldTo
Visiting attribute path : shipTo
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.govansnv.fuel.model.Company.customers)
    - Returns
       - CollectionReturnImpl(collection=com.govansnv.fuel.model.Company.customers, querySpaceUid=<gen:0>, path=[com.govansnv.fuel.model.Company.customers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Customer, querySpaceUid=<gen:1>, path=[com.govansnv.fuel.model.Company.customers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.govansnv.fuel.model.Company.customers)
          - SQL table alias mapping - customers0_
          - alias suffix - 0_
          - suffixed key columns - {company_7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Customer)
                - SQL table alias mapping - customers0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

Static select for collection com.govansnv.fuel.model.Company.customers: select customers0_.company_id as company_7_0_0_, customers0_.id as id1_1_0_, customers0_.id as id1_1_1_, customers0_.barcode as barcode2_1_1_, customers0_.company_id as company_7_1_1_, customers0_.customer_id as customer3_1_1_, customers0_.customer_ship_to as customer4_1_1_, customers0_.customer_sold_to as customer5_1_1_, customers0_.ship_to as ship_to6_1_1_ from Customer customers0_ where customers0_.company_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79d743e6]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776802b0]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : deviceNo
Visiting attribute path : lastSynch
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.govansnv.fuel.model.Department.devices)
    - Returns
       - CollectionReturnImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:0>, path=[com.govansnv.fuel.model.Department.devices])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:1>, path=[com.govansnv.fuel.model.Department.devices].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.govansnv.fuel.model.Department.devices)
          - SQL table alias mapping - devices0_
          - alias suffix - 0_
          - suffixed key columns - {departme4_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Device)
                - SQL table alias mapping - devices0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

Static select for collection com.govansnv.fuel.model.Department.devices: select devices0_.department_id as departme4_5_0_, devices0_.id as id1_2_0_, devices0_.id as id1_2_1_, devices0_.department_id as departme4_2_1_, devices0_.device_no as device_n2_2_1_, devices0_.last_synch as last_syn3_2_1_ from Device devices0_ where devices0_.department_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@592238c5]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee8dcd3]
Visiting attribute path : company
Property path deemed to be circular : company
Visiting attribute path : departmentName
Visiting attribute path : devices
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14f3c6fc]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cd59ef5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.govansnv.fuel.model.Company.departments)
    - Returns
       - CollectionReturnImpl(collection=com.govansnv.fuel.model.Company.departments, querySpaceUid=<gen:0>, path=[com.govansnv.fuel.model.Company.departments])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Department, querySpaceUid=<gen:1>, path=[com.govansnv.fuel.model.Company.departments].<elements>)
             - CollectionAttributeFetchImpl(collection=com.govansnv.fuel.model.Department.devices, querySpaceUid=<gen:2>, path=[com.govansnv.fuel.model.Company.departments].<elements>.devices)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.govansnv.fuel.model.Device, querySpaceUid=<gen:3>, path=[com.govansnv.fuel.model.Company.departments].<elements>.devices.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.govansnv.fuel.model.Company.departments)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {company_3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.govansnv.fuel.model.Department)
                - SQL table alias mapping - department0_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for collection com.govansnv.fuel.model.Company.departments: select department0_.company_id as company_3_0_0_, department0_.id as id1_5_0_, department0_.id as id1_5_1_, department0_.company_id as company_3_5_1_, department0_.department_name as departme2_5_1_ from department department0_ where department0_.company_id=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53ac845a
Registering SessionFactory: aa46e08d-4ed0-4037-b0ec-dba75b5d0c01 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@6ac0b715
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a79c292: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,appConfig,authServerOAuth2Config,methodSecurityConfig,OAuth2ResourceServerConfig,OAuth2SecurityConfig,companyRestController,departmentRestController,deviceRestController,driverRestController,companyDaoImpl,customerDaoImpl,departmentDaoImpl,deviceDaoImpl,driverDaoImpl,fuelDeliveryDaoImpl,purchaseOrderDaoImpl,truckDaoImpl,companyService,customerService,departmentService,devicesService,driverService,fuelDeliveryService,purchaseOrderService,truckService,org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar,org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration,authorizationEndpoint,tokenEndpoint,checkTokenEndpoint,whitelabelApprovalEndpoint,whitelabelErrorEndpoint,oauth2EndpointHandlerMapping,consumerTokenServices,defaultAuthorizationServerTokenServices,org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration,clientDetailsServiceConfigurer,scopedTarget.clientDetailsService,clientDetailsService,org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration,org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration,authenticationManagerBuilder,enableGlobalAuthenticationAutowiredConfigurer,org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration,objectPostProcessor,methodSecurityInterceptor,methodSecurityMetadataSource,preInvocationAuthorizationAdvice,metaDataSourceAdvisor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration,delegatingApplicationListener,webSecurityExpressionHandler,springSecurityFilterChain,privilegeEvaluator,autowiredWebSecurityConfigurersIgnoreParents,authenticationManagerBean,tokenStore,userApprovalHandler,approvalStore,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcPathMatcher,mvcUrlPathHelper,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,urlBasedViewResolver,dataSource,entityManagerFactory,jpaVendorAdapter,transactionManager]; root of factory hierarchy
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
Returning cached instance of singleton bean 'appConfig'
Creating shared instance of singleton bean 'authServerOAuth2Config'
Creating instance of bean 'authServerOAuth2Config'
Registered injected element on class [com.govansnv.fuel.config.AuthServerOAuth2Config$$EnhancerBySpringCGLIB$$1baeb873]: AutowiredFieldElement for private org.springframework.security.oauth2.provider.token.TokenStore com.govansnv.fuel.config.AuthServerOAuth2Config.tokenStore
Registered injected element on class [com.govansnv.fuel.config.AuthServerOAuth2Config$$EnhancerBySpringCGLIB$$1baeb873]: AutowiredFieldElement for private org.springframework.security.oauth2.provider.approval.UserApprovalHandler com.govansnv.fuel.config.AuthServerOAuth2Config.handler
Registered injected element on class [com.govansnv.fuel.config.AuthServerOAuth2Config$$EnhancerBySpringCGLIB$$1baeb873]: AutowiredFieldElement for private org.springframework.security.authentication.AuthenticationManager com.govansnv.fuel.config.AuthServerOAuth2Config.authManager
Eagerly caching bean 'authServerOAuth2Config' to allow for resolving potential circular references
Processing injected element of bean 'authServerOAuth2Config': AutowiredFieldElement for private org.springframework.security.oauth2.provider.token.TokenStore com.govansnv.fuel.config.AuthServerOAuth2Config.tokenStore
Creating shared instance of singleton bean 'tokenStore'
Creating instance of bean 'tokenStore'
Returning cached instance of singleton bean 'OAuth2SecurityConfig'
Eagerly caching bean 'tokenStore' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'tokenStore'
Autowiring by type from bean name 'authServerOAuth2Config' to bean named 'tokenStore'
Processing injected element of bean 'authServerOAuth2Config': AutowiredFieldElement for private org.springframework.security.oauth2.provider.approval.UserApprovalHandler com.govansnv.fuel.config.AuthServerOAuth2Config.handler
Creating shared instance of singleton bean 'userApprovalHandler'
Creating instance of bean 'userApprovalHandler'
Returning cached instance of singleton bean 'OAuth2SecurityConfig'
Returning cached instance of singleton bean 'tokenStore'
Autowiring by type from bean name 'userApprovalHandler' via factory method to bean named 'tokenStore'
Eagerly caching bean 'userApprovalHandler' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'userApprovalHandler'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'userApprovalHandler'
Autowiring by type from bean name 'authServerOAuth2Config' to bean named 'userApprovalHandler'
Processing injected element of bean 'authServerOAuth2Config': AutowiredFieldElement for private org.springframework.security.authentication.AuthenticationManager com.govansnv.fuel.config.AuthServerOAuth2Config.authManager
Creating shared instance of singleton bean 'authenticationManagerBean'
Creating instance of bean 'authenticationManagerBean'
Returning cached instance of singleton bean 'OAuth2SecurityConfig'
Eagerly caching bean 'authenticationManagerBean' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'authenticationManagerBean'
Autowiring by type from bean name 'authServerOAuth2Config' to bean named 'authenticationManagerBean'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'authServerOAuth2Config'
Returning cached instance of singleton bean 'methodSecurityConfig'
Creating shared instance of singleton bean 'OAuth2ResourceServerConfig'
Creating instance of bean 'OAuth2ResourceServerConfig'
Eagerly caching bean 'OAuth2ResourceServerConfig' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'OAuth2ResourceServerConfig'
Returning cached instance of singleton bean 'OAuth2SecurityConfig'
Creating shared instance of singleton bean 'companyRestController'
Creating instance of bean 'companyRestController'
Registered injected element on class [com.govansnv.fuel.controller.CompanyRestController]: AutowiredFieldElement for com.govansnv.fuel.service.CompanyService com.govansnv.fuel.controller.CompanyRestController.companyService
Eagerly caching bean 'companyRestController' to allow for resolving potential circular references
Processing injected element of bean 'companyRestController': AutowiredFieldElement for com.govansnv.fuel.service.CompanyService com.govansnv.fuel.controller.CompanyRestController.companyService
Creating shared instance of singleton bean 'companyService'
Creating instance of bean 'companyService'
Registered injected element on class [com.govansnv.fuel.service.impl.CompanyServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.CompanyDao com.govansnv.fuel.service.impl.CompanyServiceImpl.companyDao
Eagerly caching bean 'companyService' to allow for resolving potential circular references
Processing injected element of bean 'companyService': AutowiredFieldElement for com.govansnv.fuel.dao.CompanyDao com.govansnv.fuel.service.impl.CompanyServiceImpl.companyDao
Creating shared instance of singleton bean 'companyDaoImpl'
Creating instance of bean 'companyDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.CompanyDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'companyDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'companyDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.CompanyDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'companyDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.CompanyDaoImpl@128c502c]
Adding transactional method 'com.govansnv.fuel.dao.impl.CompanyDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.CompanyDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.CompanyDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Company com.govansnv.fuel.dao.impl.CompanyDaoImpl.create(com.govansnv.fuel.model.Company)
Adding transactional method 'com.govansnv.fuel.dao.impl.CompanyDaoImpl.getCompany' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Company com.govansnv.fuel.dao.impl.CompanyDaoImpl.getCompany(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.CompanyDaoImpl.updateCompany' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Company com.govansnv.fuel.dao.impl.CompanyDaoImpl.updateCompany(com.govansnv.fuel.model.Company)
Adding transactional method 'com.govansnv.fuel.dao.impl.CompanyDaoImpl.getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.CompanyDaoImpl.getAll()
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.CompanyDaoImpl.initializeCollection(java.util.Collection)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'companyDaoImpl'
Autowiring by type from bean name 'companyService' to bean named 'companyDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'companyService'
Autowiring by type from bean name 'companyRestController' to bean named 'companyService'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'companyRestController'
Creating shared instance of singleton bean 'departmentRestController'
Creating instance of bean 'departmentRestController'
Registered injected element on class [com.govansnv.fuel.controller.DepartmentRestController]: AutowiredFieldElement for com.govansnv.fuel.service.DepartmentService com.govansnv.fuel.controller.DepartmentRestController.departmentService
Eagerly caching bean 'departmentRestController' to allow for resolving potential circular references
Processing injected element of bean 'departmentRestController': AutowiredFieldElement for com.govansnv.fuel.service.DepartmentService com.govansnv.fuel.controller.DepartmentRestController.departmentService
Creating shared instance of singleton bean 'departmentService'
Creating instance of bean 'departmentService'
Registered injected element on class [com.govansnv.fuel.service.impl.DepartmentServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.DepartmentDao com.govansnv.fuel.service.impl.DepartmentServiceImpl.departmentDao
Eagerly caching bean 'departmentService' to allow for resolving potential circular references
Processing injected element of bean 'departmentService': AutowiredFieldElement for com.govansnv.fuel.dao.DepartmentDao com.govansnv.fuel.service.impl.DepartmentServiceImpl.departmentDao
Creating shared instance of singleton bean 'departmentDaoImpl'
Creating instance of bean 'departmentDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.DepartmentDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'departmentDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'departmentDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.DepartmentDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'departmentDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.DepartmentDaoImpl@22590e3e]
Adding transactional method 'com.govansnv.fuel.dao.impl.DepartmentDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.DepartmentDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.DepartmentDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Department com.govansnv.fuel.dao.impl.DepartmentDaoImpl.create(com.govansnv.fuel.model.Department)
Adding transactional method 'com.govansnv.fuel.dao.impl.DepartmentDaoImpl.getDepartment' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Department com.govansnv.fuel.dao.impl.DepartmentDaoImpl.getDepartment(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.DepartmentDaoImpl.updateDepartment' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Department com.govansnv.fuel.dao.impl.DepartmentDaoImpl.updateDepartment(com.govansnv.fuel.model.Department)
Adding transactional method 'com.govansnv.fuel.dao.impl.DepartmentDaoImpl.getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.DepartmentDaoImpl.getAll()
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.DepartmentDaoImpl.initializeCollection(java.util.Collection)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'departmentDaoImpl'
Autowiring by type from bean name 'departmentService' to bean named 'departmentDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'departmentService'
Autowiring by type from bean name 'departmentRestController' to bean named 'departmentService'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'departmentRestController'
Creating shared instance of singleton bean 'deviceRestController'
Creating instance of bean 'deviceRestController'
Registered injected element on class [com.govansnv.fuel.controller.DeviceRestController]: AutowiredFieldElement for com.govansnv.fuel.service.DeviceService com.govansnv.fuel.controller.DeviceRestController.deviceService
Eagerly caching bean 'deviceRestController' to allow for resolving potential circular references
Processing injected element of bean 'deviceRestController': AutowiredFieldElement for com.govansnv.fuel.service.DeviceService com.govansnv.fuel.controller.DeviceRestController.deviceService
Creating shared instance of singleton bean 'devicesService'
Creating instance of bean 'devicesService'
Registered injected element on class [com.govansnv.fuel.service.impl.DeviceServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.DeviceDao com.govansnv.fuel.service.impl.DeviceServiceImpl.deviceDao
Eagerly caching bean 'devicesService' to allow for resolving potential circular references
Processing injected element of bean 'devicesService': AutowiredFieldElement for com.govansnv.fuel.dao.DeviceDao com.govansnv.fuel.service.impl.DeviceServiceImpl.deviceDao
Creating shared instance of singleton bean 'deviceDaoImpl'
Creating instance of bean 'deviceDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.DeviceDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'deviceDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'deviceDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.DeviceDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'deviceDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.DeviceDaoImpl@4f67e3df]
Adding transactional method 'com.govansnv.fuel.dao.impl.DeviceDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.DeviceDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.DeviceDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Device com.govansnv.fuel.dao.impl.DeviceDaoImpl.create(com.govansnv.fuel.model.Device)
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.DeviceDaoImpl.getAll()
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Device com.govansnv.fuel.dao.impl.DeviceDaoImpl.getDeviceByNo(int)
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Device com.govansnv.fuel.dao.impl.DeviceDaoImpl.getDevice(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.DeviceDaoImpl.updateDevice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public void com.govansnv.fuel.dao.impl.DeviceDaoImpl.updateDevice(com.govansnv.fuel.model.Device)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.DeviceDaoImpl.initializeCollection(java.util.Collection)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'deviceDaoImpl'
Autowiring by type from bean name 'devicesService' to bean named 'deviceDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'devicesService'
Autowiring by type from bean name 'deviceRestController' to bean named 'devicesService'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'deviceRestController'
Creating shared instance of singleton bean 'driverRestController'
Creating instance of bean 'driverRestController'
Registered injected element on class [com.govansnv.fuel.controller.DriverRestController]: AutowiredFieldElement for com.govansnv.fuel.service.DriverService com.govansnv.fuel.controller.DriverRestController.driverService
Eagerly caching bean 'driverRestController' to allow for resolving potential circular references
Processing injected element of bean 'driverRestController': AutowiredFieldElement for com.govansnv.fuel.service.DriverService com.govansnv.fuel.controller.DriverRestController.driverService
Creating shared instance of singleton bean 'driverService'
Creating instance of bean 'driverService'
Registered injected element on class [com.govansnv.fuel.service.impl.DriverServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.DriverDao com.govansnv.fuel.service.impl.DriverServiceImpl.driverDao
Eagerly caching bean 'driverService' to allow for resolving potential circular references
Processing injected element of bean 'driverService': AutowiredFieldElement for com.govansnv.fuel.dao.DriverDao com.govansnv.fuel.service.impl.DriverServiceImpl.driverDao
Creating shared instance of singleton bean 'driverDaoImpl'
Creating instance of bean 'driverDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.DriverDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'driverDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'driverDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.DriverDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'driverDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.DriverDaoImpl@41fed14f]
Adding transactional method 'com.govansnv.fuel.dao.impl.DriverDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.DriverDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.DriverDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Driver com.govansnv.fuel.dao.impl.DriverDaoImpl.create(com.govansnv.fuel.model.Driver)
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Driver com.govansnv.fuel.dao.impl.DriverDaoImpl.getDriver(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.DriverDaoImpl.updateDriver' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public void com.govansnv.fuel.dao.impl.DriverDaoImpl.updateDriver(com.govansnv.fuel.model.Driver)
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.DriverDaoImpl.getAll()
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.DriverDaoImpl.initializeCollection(java.util.Collection)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'driverDaoImpl'
Autowiring by type from bean name 'driverService' to bean named 'driverDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'driverService'
Autowiring by type from bean name 'driverRestController' to bean named 'driverService'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'driverRestController'
Returning cached instance of singleton bean 'companyDaoImpl'
Creating shared instance of singleton bean 'customerDaoImpl'
Creating instance of bean 'customerDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.CustomerDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'customerDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'customerDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.CustomerDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'customerDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.CustomerDaoImpl@1fba386c]
Adding transactional method 'com.govansnv.fuel.dao.impl.CustomerDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.CustomerDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.CustomerDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Customer com.govansnv.fuel.dao.impl.CustomerDaoImpl.create(com.govansnv.fuel.model.Customer)
Adding transactional method 'com.govansnv.fuel.dao.impl.CustomerDaoImpl.getAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.CustomerDaoImpl.getAll()
Adding transactional method 'com.govansnv.fuel.dao.impl.CustomerDaoImpl.getCustomer' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Customer com.govansnv.fuel.dao.impl.CustomerDaoImpl.getCustomer(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.CustomerDaoImpl.updateCustomer' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Customer com.govansnv.fuel.dao.impl.CustomerDaoImpl.updateCustomer(com.govansnv.fuel.model.Customer)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.CustomerDaoImpl.initializeCollection(java.util.Collection)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'customerDaoImpl'
Returning cached instance of singleton bean 'departmentDaoImpl'
Returning cached instance of singleton bean 'deviceDaoImpl'
Returning cached instance of singleton bean 'driverDaoImpl'
Creating shared instance of singleton bean 'fuelDeliveryDaoImpl'
Creating instance of bean 'fuelDeliveryDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'fuelDeliveryDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'fuelDeliveryDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'fuelDeliveryDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl@3874b815]
Adding transactional method 'com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.FuelDelivery com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.create(com.govansnv.fuel.model.FuelDelivery)
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.getAll()
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.FuelDelivery com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.getFuelDelivery(int)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.initializeCollection(java.util.Collection)
Adding transactional method 'com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.updateFuelDelivery' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public void com.govansnv.fuel.dao.impl.FuelDeliveryDaoImpl.updateFuelDelivery(com.govansnv.fuel.model.FuelDelivery)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'fuelDeliveryDaoImpl'
Creating shared instance of singleton bean 'purchaseOrderDaoImpl'
Creating instance of bean 'purchaseOrderDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'purchaseOrderDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'purchaseOrderDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'purchaseOrderDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl@45f421c]
Adding transactional method 'com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.PurchaseOrder com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.create(com.govansnv.fuel.model.PurchaseOrder)
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.getAll()
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.PurchaseOrder com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.getPurchaseOrder(int)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.initializeCollection(java.util.Collection)
Adding transactional method 'com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.updatePurchaseOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public void com.govansnv.fuel.dao.impl.PurchaseOrderDaoImpl.updatePurchaseOrder(com.govansnv.fuel.model.PurchaseOrder)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'purchaseOrderDaoImpl'
Creating shared instance of singleton bean 'truckDaoImpl'
Creating instance of bean 'truckDaoImpl'
Registered injected element on class [com.govansnv.fuel.dao.impl.TruckDaoImpl]: PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Eagerly caching bean 'truckDaoImpl' to allow for resolving potential circular references
Processing injected element of bean 'truckDaoImpl': PersistenceElement for javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.entityManager
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.govansnv.fuel.dao.impl.TruckDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Creating implicit proxy for bean 'truckDaoImpl' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.govansnv.fuel.dao.impl.TruckDaoImpl@783115d9]
Adding transactional method 'com.govansnv.fuel.dao.impl.TruckDaoImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public boolean com.govansnv.fuel.dao.impl.TruckDaoImpl.remove(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.TruckDaoImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Truck com.govansnv.fuel.dao.impl.TruckDaoImpl.create(com.govansnv.fuel.model.Truck)
Unable to apply any optimizations to advised method: public java.util.List com.govansnv.fuel.dao.impl.TruckDaoImpl.getAll()
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Truck com.govansnv.fuel.dao.impl.TruckDaoImpl.getTruck(int)
Unable to apply any optimizations to advised method: public com.govansnv.fuel.model.Truck com.govansnv.fuel.dao.impl.TruckDaoImpl.getTruckByNo(int)
Adding transactional method 'com.govansnv.fuel.dao.impl.TruckDaoImpl.updateTruck' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Unable to apply any optimizations to advised method: public void com.govansnv.fuel.dao.impl.TruckDaoImpl.updateTruck(com.govansnv.fuel.model.Truck)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.impl.TruckDaoImpl.initializeCollection(java.util.Collection)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.update(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.delete(java.lang.Object)
Unable to apply any optimizations to advised method: protected void com.govansnv.fuel.dao.AbstractDao.persist(java.lang.Object)
Unable to apply any optimizations to advised method: protected javax.persistence.EntityManager com.govansnv.fuel.dao.AbstractDao.getEntityManager()
Unable to apply any optimizations to advised method: protected java.lang.Object com.govansnv.fuel.dao.AbstractDao.getByKey(java.io.Serializable)
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Finished creating instance of bean 'truckDaoImpl'
Returning cached instance of singleton bean 'companyService'
Creating shared instance of singleton bean 'customerService'
Creating instance of bean 'customerService'
Registered injected element on class [com.govansnv.fuel.service.impl.CustomerServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.CustomerDao com.govansnv.fuel.service.impl.CustomerServiceImpl.customerDao
Eagerly caching bean 'customerService' to allow for resolving potential circular references
Processing injected element of bean 'customerService': AutowiredFieldElement for com.govansnv.fuel.dao.CustomerDao com.govansnv.fuel.service.impl.CustomerServiceImpl.customerDao
Returning cached instance of singleton bean 'customerDaoImpl'
Autowiring by type from bean name 'customerService' to bean named 'customerDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'customerService'
Returning cached instance of singleton bean 'departmentService'
Returning cached instance of singleton bean 'devicesService'
Returning cached instance of singleton bean 'driverService'
Creating shared instance of singleton bean 'fuelDeliveryService'
Creating instance of bean 'fuelDeliveryService'
Registered injected element on class [com.govansnv.fuel.service.impl.FuelDeliveryServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.FuelDeliveryDao com.govansnv.fuel.service.impl.FuelDeliveryServiceImpl.fuelDeliveryDao
Eagerly caching bean 'fuelDeliveryService' to allow for resolving potential circular references
Processing injected element of bean 'fuelDeliveryService': AutowiredFieldElement for com.govansnv.fuel.dao.FuelDeliveryDao com.govansnv.fuel.service.impl.FuelDeliveryServiceImpl.fuelDeliveryDao
Returning cached instance of singleton bean 'fuelDeliveryDaoImpl'
Autowiring by type from bean name 'fuelDeliveryService' to bean named 'fuelDeliveryDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'fuelDeliveryService'
Creating shared instance of singleton bean 'purchaseOrderService'
Creating instance of bean 'purchaseOrderService'
Registered injected element on class [com.govansnv.fuel.service.impl.PurchaseOrderServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.PurchaseOrderDao com.govansnv.fuel.service.impl.PurchaseOrderServiceImpl.purchaseOrderDao
Eagerly caching bean 'purchaseOrderService' to allow for resolving potential circular references
Processing injected element of bean 'purchaseOrderService': AutowiredFieldElement for com.govansnv.fuel.dao.PurchaseOrderDao com.govansnv.fuel.service.impl.PurchaseOrderServiceImpl.purchaseOrderDao
Returning cached instance of singleton bean 'purchaseOrderDaoImpl'
Autowiring by type from bean name 'purchaseOrderService' to bean named 'purchaseOrderDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'purchaseOrderService'
Creating shared instance of singleton bean 'truckService'
Creating instance of bean 'truckService'
Registered injected element on class [com.govansnv.fuel.service.impl.TruckServiceImpl]: AutowiredFieldElement for com.govansnv.fuel.dao.TruckDao com.govansnv.fuel.service.impl.TruckServiceImpl.truckDao
Eagerly caching bean 'truckService' to allow for resolving potential circular references
Processing injected element of bean 'truckService': AutowiredFieldElement for com.govansnv.fuel.dao.TruckDao com.govansnv.fuel.service.impl.TruckServiceImpl.truckDao
Returning cached instance of singleton bean 'truckDaoImpl'
Autowiring by type from bean name 'truckService' to bean named 'truckDaoImpl'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'truckService'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar'
Creating shared instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Creating instance of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Found init method on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$$EnhancerBySpringCGLIB$$d4102db9]: public void org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.init()
Registered init method on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$$EnhancerBySpringCGLIB$$d4102db9]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@316510
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$$EnhancerBySpringCGLIB$$d4102db9]: AutowiredFieldElement for private org.springframework.security.oauth2.provider.ClientDetailsService org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.clientDetailsService
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$$EnhancerBySpringCGLIB$$d4102db9]: AutowiredFieldElement for private java.util.List org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.configurers
Eagerly caching bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration' to allow for resolving potential circular references
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration': AutowiredFieldElement for private org.springframework.security.oauth2.provider.ClientDetailsService org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.clientDetailsService
Returning cached instance of singleton bean 'clientDetailsService'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration' to bean named 'clientDetailsService'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration': AutowiredFieldElement for private java.util.List org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.configurers
Returning cached instance of singleton bean 'authServerOAuth2Config'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration' to bean named 'authServerOAuth2Config'
Invoking init method on bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration': public void org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration.init()
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Creating shared instance of singleton bean 'authorizationEndpoint'
Creating instance of bean 'authorizationEndpoint'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'authorizationEndpoint' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'authorizationEndpoint'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'authorizationEndpoint'
Creating shared instance of singleton bean 'tokenEndpoint'
Creating instance of bean 'tokenEndpoint'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'tokenEndpoint' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'tokenEndpoint'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'tokenEndpoint'
Creating shared instance of singleton bean 'checkTokenEndpoint'
Creating instance of bean 'checkTokenEndpoint'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'checkTokenEndpoint' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'checkTokenEndpoint'
Creating shared instance of singleton bean 'whitelabelApprovalEndpoint'
Creating instance of bean 'whitelabelApprovalEndpoint'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'whitelabelApprovalEndpoint' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'whitelabelApprovalEndpoint'
Creating shared instance of singleton bean 'whitelabelErrorEndpoint'
Creating instance of bean 'whitelabelErrorEndpoint'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'whitelabelErrorEndpoint' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'whitelabelErrorEndpoint'
Creating shared instance of singleton bean 'oauth2EndpointHandlerMapping'
Creating instance of bean 'oauth2EndpointHandlerMapping'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'oauth2EndpointHandlerMapping' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'oauth2EndpointHandlerMapping'
Looking for request mappings in application context: org.springframework.web.context.support.GenericWebApplicationContext@1f57539: startup date [Sun Jun 11 10:04:00 VET 2017]; root of context hierarchy
2 request handler methods found on class org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint: {public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map,java.util.Map,org.springframework.web.bind.support.SessionStatus,java.security.Principal)={[/oauth/authorize]}, public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map,java.util.Map,org.springframework.web.bind.support.SessionStatus,java.security.Principal)={[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}}
Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2 request handler methods found on class org.springframework.security.oauth2.provider.endpoint.TokenEndpoint: {public org.springframework.http.ResponseEntity org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map) throws org.springframework.web.HttpRequestMethodNotSupportedException={[/oauth/token],methods=[GET]}, public org.springframework.http.ResponseEntity org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map) throws org.springframework.web.HttpRequestMethodNotSupportedException={[/oauth/token],methods=[POST]}}
Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
1 request handler methods found on class org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint: {public java.util.Map org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)={[/oauth/check_token]}}
Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
1 request handler methods found on class org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint: {public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map,javax.servlet.http.HttpServletRequest) throws java.lang.Exception={[/oauth/confirm_access]}}
Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
1 request handler methods found on class org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint: {public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)={[/oauth/error]}}
Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'oauth2EndpointHandlerMapping'
Creating shared instance of singleton bean 'consumerTokenServices'
Creating instance of bean 'consumerTokenServices'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'consumerTokenServices' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'consumerTokenServices'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'consumerTokenServices'
Creating shared instance of singleton bean 'defaultAuthorizationServerTokenServices'
Creating instance of bean 'defaultAuthorizationServerTokenServices'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Eagerly caching bean 'defaultAuthorizationServerTokenServices' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'defaultAuthorizationServerTokenServices'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'defaultAuthorizationServerTokenServices'
Creating shared instance of singleton bean 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration'
Creating instance of bean 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration'
Eagerly caching bean 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration'
Creating shared instance of singleton bean 'clientDetailsServiceConfigurer'
Creating instance of bean 'clientDetailsServiceConfigurer'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration'
Eagerly caching bean 'clientDetailsServiceConfigurer' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'clientDetailsServiceConfigurer'
Returning cached instance of singleton bean 'clientDetailsService'
Creating shared instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration'
Creating instance of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration'
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setApplicationContext(org.springframework.context.ApplicationContext)
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setContentNegotationStrategy(org.springframework.web.accept.ContentNegotiationStrategy)
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setAuthenticationConfiguration(org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration)
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredFieldElement for private java.util.List org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.configurers
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredFieldElement for private org.springframework.security.oauth2.provider.ClientDetailsService org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.clientDetailsService
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredFieldElement for private org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.endpoints
Registered injected element on class [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration$$EnhancerBySpringCGLIB$$f7f6aac1]: AutowiredMethodElement for public void org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.configure(org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer) throws java.lang.Exception
Eagerly caching bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to allow for resolving potential circular references
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setApplicationContext(org.springframework.context.ApplicationContext)
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1f57539'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setContentNegotationStrategy(org.springframework.web.accept.ContentNegotiationStrategy)
Returning cached instance of singleton bean 'mvcContentNegotiationManager'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'mvcContentNegotiationManager'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor)
Returning cached instance of singleton bean 'objectPostProcessor'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'objectPostProcessor'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.setAuthenticationConfiguration(org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration)
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredFieldElement for private java.util.List org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.configurers
Returning cached instance of singleton bean 'authServerOAuth2Config'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'authServerOAuth2Config'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredFieldElement for private org.springframework.security.oauth2.provider.ClientDetailsService org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.clientDetailsService
Returning cached instance of singleton bean 'clientDetailsService'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'clientDetailsService'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredFieldElement for private org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.endpoints
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration'
Processing injected element of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': AutowiredMethodElement for public void org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration.configure(org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer) throws java.lang.Exception
Returning cached instance of singleton bean 'clientDetailsServiceConfigurer'
Autowiring by type from bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration' to bean named 'clientDetailsServiceConfigurer'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration'
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Returning cached instance of singleton bean 'authenticationManagerBuilder'
Returning cached instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Returning cached instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Creating instance of bean 'methodSecurityInterceptor'
Returning cached instance of singleton bean 'methodSecurityConfig'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Returning cached instance of singleton bean 'methodSecurityConfig'
Returning cached instance of singleton bean 'OAuth2SecurityConfig'
Eagerly initializing {methodSecurityConfig=com.govansnv.fuel.config.MethodSecurityConfig$$EnhancerBySpringCGLIB$$f1296dce@573906eb, OAuth2SecurityConfig=com.govansnv.fuel.config.OAuth2SecurityConfig$$EnhancerBySpringCGLIB$$5d96c108@225129c}
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.authentication.dao.DaoAuthenticationProvider@72725ee1'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.authentication.ProviderManager@2c0b4c83'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'methodSecurityMetadataSource'
Eagerly caching bean 'methodSecurityInterceptor' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'methodSecurityInterceptor'
Validated configuration attributes
Finished creating instance of bean 'methodSecurityInterceptor'
Returning cached instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating instance of bean 'preInvocationAuthorizationAdvice'
Returning cached instance of singleton bean 'methodSecurityConfig'
Eagerly caching bean 'preInvocationAuthorizationAdvice' to allow for resolving potential circular references
Finished creating instance of bean 'preInvocationAuthorizationAdvice'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating instance of bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Registered injected element on class [org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$901a55c4]: AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.setFilterChainProxySecurityConfigurer(org.springframework.security.config.annotation.ObjectPostProcessor,java.util.List) throws java.lang.Exception
Eagerly caching bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration' to allow for resolving potential circular references
Processing injected element of bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': AutowiredMethodElement for public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.setFilterChainProxySecurityConfigurer(org.springframework.security.config.annotation.ObjectPostProcessor,java.util.List) throws java.lang.Exception
Returning cached instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'autowiredWebSecurityConfigurersIgnoreParents'
Creating instance of bean 'autowiredWebSecurityConfigurersIgnoreParents'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning eagerly cached instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration' that is not fully initialized yet - a consequence of a circular reference
Autowiring by type from bean name 'autowiredWebSecurityConfigurersIgnoreParents' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6a79c292'
Eagerly caching bean 'autowiredWebSecurityConfigurersIgnoreParents' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'autowiredWebSecurityConfigurersIgnoreParents'
Returning cached instance of singleton bean 'OAuth2SecurityConfig'
Returning cached instance of singleton bean 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration'
Autowiring by type from bean name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration' to bean named 'objectPostProcessor'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
Finished creating instance of bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating instance of bean 'delegatingApplicationListener'
Eagerly caching bean 'delegatingApplicationListener' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
Creating instance of bean 'springSecurityFilterChain'
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
No authenticationProviders and no parentAuthenticationManager defined. Returning null.
Returning cached instance of singleton bean 'authenticationManagerBuilder'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Returning cached instance of singleton bean 'oauth2EndpointHandlerMapping'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'authenticationManagerBuilder'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.authentication.AnonymousAuthenticationProvider@d277579'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@445bb139'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint@1a96d94c'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.authentication.dao.DaoAuthenticationProvider@46aa712c'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.authentication.ProviderManager@6ada9c0c'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.access.ExceptionTranslationFilter@2b960a7'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.header.HeaderWriterFilter@7c847072'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.session.SessionManagementFilter@5de6cf3a'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.context.SecurityContextPersistenceFilter@5a3a1bf9'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4af45442'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@176f7f3b'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.authentication.logout.LogoutFilter@c2584d3'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding web access control expression 'fullyAuthenticated', for Ant [pattern='/oauth/token']
Adding web access control expression 'denyAll()', for Ant [pattern='/oauth/token_key']
Adding web access control expression 'denyAll()', for Ant [pattern='/oauth/check_token']
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.access.vote.AffirmativeBased@5d497a91'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Validated configuration attributes
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e0bc8a3'
Validated configuration attributes
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.authentication.www.BasicAuthenticationFilter@12704e15'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48a0c8aa, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a3a1bf9, org.springframework.security.web.header.HeaderWriterFilter@7c847072, org.springframework.security.web.authentication.logout.LogoutFilter@c2584d3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@12704e15, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4af45442, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@176f7f3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6192a5d5, org.springframework.security.web.session.SessionManagementFilter@5de6cf3a, org.springframework.security.web.access.ExceptionTranslationFilter@2b960a7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e0bc8a3]
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.authentication.ProviderManager@4cbc2e3b'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.access.ExceptionTranslationFilter@57562473'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.header.HeaderWriterFilter@7a360554'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.session.SessionManagementFilter@424de326'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.context.SecurityContextPersistenceFilter@4bc33720'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2dd0f797'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67064bdc'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.authentication.logout.LogoutFilter@4a7fd0c9'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding web access control expression 'permitAll', for Ant [pattern='/oauth/token']
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.access.vote.AffirmativeBased@3291b443'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Validated configuration attributes
Invoking afterPropertiesSet() on bean with name 'org.springframework.security.web.access.intercept.FilterSecurityInterceptor@53d13cd4'
Validated configuration attributes
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77865933, org.springframework.security.web.context.SecurityContextPersistenceFilter@4bc33720, org.springframework.security.web.header.HeaderWriterFilter@7a360554, org.springframework.security.web.authentication.logout.LogoutFilter@4a7fd0c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2dd0f797, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67064bdc, org.springframework.security.web.session.SessionManagementFilter@424de326, org.springframework.security.web.access.ExceptionTranslationFilter@57562473, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@53d13cd4]
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
Eagerly caching bean 'springSecurityFilterChain' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'springSecurityFilterChain'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'springSecurityFilterChain'
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating instance of bean 'webSecurityExpressionHandler'
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Eagerly caching bean 'webSecurityExpressionHandler' to allow for resolving potential circular references
Finished creating instance of bean 'webSecurityExpressionHandler'
Returning cached instance of singleton bean 'springSecurityFilterChain'
Returning cached instance of singleton bean 'springSecurityFilterChain'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating instance of bean 'privilegeEvaluator'
Returning cached instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Eagerly caching bean 'privilegeEvaluator' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'privilegeEvaluator'
Returning cached instance of singleton bean 'autowiredWebSecurityConfigurersIgnoreParents'
Returning cached instance of singleton bean 'authenticationManagerBean'
Returning cached instance of singleton bean 'tokenStore'
Returning cached instance of singleton bean 'userApprovalHandler'
Creating shared instance of singleton bean 'approvalStore'
Creating instance of bean 'approvalStore'
Returning cached instance of singleton bean 'OAuth2SecurityConfig'
Returning cached instance of singleton bean 'tokenStore'
Autowiring by type from bean name 'approvalStore' via factory method to bean named 'tokenStore'
Eagerly caching bean 'approvalStore' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'approvalStore'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Creating instance of bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Creating shared instance of singleton bean 'mvcConversionService'
Creating instance of bean 'mvcConversionService'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'mvcConversionService' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Creating instance of bean 'mvcResourceUrlProvider'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'mvcResourceUrlProvider' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcResourceUrlProvider'
Returning cached instance of singleton bean 'mvcContentNegotiationManager'
Eagerly caching bean 'requestMappingHandlerMapping' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'requestMappingHandlerMapping'
Looking for request mappings in application context: org.springframework.web.context.support.GenericWebApplicationContext@1f57539: startup date [Sun Jun 11 10:04:00 VET 2017]; root of context hierarchy
4 request handler methods found on class com.govansnv.fuel.controller.CompanyRestController: {public java.util.List com.govansnv.fuel.controller.CompanyRestController.getCompanies()={[/companies],methods=[GET]}, public com.govansnv.fuel.model.Company com.govansnv.fuel.controller.CompanyRestController.getCompany(int)={[/companies/{companyId}],methods=[GET],produces=[application/json]}, public com.govansnv.fuel.model.Company com.govansnv.fuel.controller.CompanyRestController.addCompany(com.govansnv.fuel.model.Company)={[/companies/add],methods=[POST],consumes=[application/json],produces=[application/json]}, public com.govansnv.fuel.model.Company com.govansnv.fuel.controller.CompanyRestController.updateCompany(com.govansnv.fuel.model.Company)={[/companies/update],methods=[POST],consumes=[application/json],produces=[application/json]}}
Mapped "{[/companies],methods=[GET]}" onto public java.util.List<com.govansnv.fuel.model.Company> com.govansnv.fuel.controller.CompanyRestController.getCompanies()
Mapped "{[/companies/{companyId}],methods=[GET],produces=[application/json]}" onto public com.govansnv.fuel.model.Company com.govansnv.fuel.controller.CompanyRestController.getCompany(int)
Mapped "{[/companies/add],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.govansnv.fuel.model.Company com.govansnv.fuel.controller.CompanyRestController.addCompany(com.govansnv.fuel.model.Company)
Mapped "{[/companies/update],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.govansnv.fuel.model.Company com.govansnv.fuel.controller.CompanyRestController.updateCompany(com.govansnv.fuel.model.Company)
4 request handler methods found on class com.govansnv.fuel.controller.DepartmentRestController: {public com.govansnv.fuel.model.Department com.govansnv.fuel.controller.DepartmentRestController.addDepartment(com.govansnv.fuel.model.Department)={[/departments/add],methods=[POST],consumes=[application/json],produces=[application/json]}, public com.govansnv.fuel.model.Department com.govansnv.fuel.controller.DepartmentRestController.getDepartment(int)={[/departments/{departmentId}],methods=[GET],produces=[application/json]}, public com.govansnv.fuel.model.Department com.govansnv.fuel.controller.DepartmentRestController.updateDepartment(com.govansnv.fuel.model.Department)={[/departments/update],methods=[POST],consumes=[application/json],produces=[application/json]}, public java.util.List com.govansnv.fuel.controller.DepartmentRestController.getCompanies()={[/departments],methods=[GET]}}
Mapped "{[/departments/add],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.govansnv.fuel.model.Department com.govansnv.fuel.controller.DepartmentRestController.addDepartment(com.govansnv.fuel.model.Department)
Mapped "{[/departments/{departmentId}],methods=[GET],produces=[application/json]}" onto public com.govansnv.fuel.model.Department com.govansnv.fuel.controller.DepartmentRestController.getDepartment(int)
Mapped "{[/departments/update],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.govansnv.fuel.model.Department com.govansnv.fuel.controller.DepartmentRestController.updateDepartment(com.govansnv.fuel.model.Department)
Mapped "{[/departments],methods=[GET]}" onto public java.util.List<com.govansnv.fuel.model.Department> com.govansnv.fuel.controller.DepartmentRestController.getCompanies()
2 request handler methods found on class com.govansnv.fuel.controller.DeviceRestController: {public java.util.List com.govansnv.fuel.controller.DeviceRestController.getDevices()={[/devices],methods=[GET]}, public com.govansnv.fuel.dto.StatusDTO com.govansnv.fuel.controller.DeviceRestController.postFuelDelivery(int,java.lang.String,int,com.govansnv.fuel.model.FuelDelivery)={[/devices/{deviceid}/{truckno}/{action}],methods=[POST]}}
Mapped "{[/devices],methods=[GET]}" onto public java.util.List<com.govansnv.fuel.model.Device> com.govansnv.fuel.controller.DeviceRestController.getDevices()
Mapped "{[/devices/{deviceid}/{truckno}/{action}],methods=[POST]}" onto public com.govansnv.fuel.dto.StatusDTO com.govansnv.fuel.controller.DeviceRestController.postFuelDelivery(int,java.lang.String,int,com.govansnv.fuel.model.FuelDelivery)
4 request handler methods found on class com.govansnv.fuel.controller.DriverRestController: {public com.govansnv.fuel.model.Driver com.govansnv.fuel.controller.DriverRestController.getDriver(int)={[/drivers/{driverId}],methods=[GET],produces=[application/json]}, public com.govansnv.fuel.model.Driver com.govansnv.fuel.controller.DriverRestController.updateDriver(com.govansnv.fuel.model.Driver)={[/drivers/update],methods=[POST],consumes=[application/json],produces=[application/json]}, public com.govansnv.fuel.model.Driver com.govansnv.fuel.controller.DriverRestController.addDriver(com.govansnv.fuel.model.Driver)={[/drivers/add],methods=[POST],consumes=[application/json],produces=[application/json]}, public java.util.List com.govansnv.fuel.controller.DriverRestController.getDrivers()={[/drivers],methods=[GET]}}
Mapped "{[/drivers/{driverId}],methods=[GET],produces=[application/json]}" onto public com.govansnv.fuel.model.Driver com.govansnv.fuel.controller.DriverRestController.getDriver(int)
Mapped "{[/drivers/update],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.govansnv.fuel.model.Driver com.govansnv.fuel.controller.DriverRestController.updateDriver(com.govansnv.fuel.model.Driver)
Mapped "{[/drivers/add],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.govansnv.fuel.model.Driver com.govansnv.fuel.controller.DriverRestController.addDriver(com.govansnv.fuel.model.Driver)
Mapped "{[/drivers],methods=[GET]}" onto public java.util.List<com.govansnv.fuel.model.Driver> com.govansnv.fuel.controller.DriverRestController.getDrivers()
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating instance of bean 'mvcPathMatcher'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'mvcPathMatcher' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating instance of bean 'mvcUrlPathHelper'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'mvcUrlPathHelper' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcUrlPathHelper'
Returning cached instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Creating instance of bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Returning cached instance of singleton bean 'mvcPathMatcher'
Returning cached instance of singleton bean 'mvcUrlPathHelper'
Eagerly caching bean 'viewControllerHandlerMapping' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'viewControllerHandlerMapping'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Creating instance of bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'beanNameHandlerMapping' to allow for resolving potential circular references
Looking for URL mappings in application context: org.springframework.web.context.support.GenericWebApplicationContext@1f57539: startup date [Sun Jun 11 10:04:00 VET 2017]; root of context hierarchy
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.event.internalEventListenerProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.event.internalEventListenerFactory': no URL paths identified
Rejected bean name 'appConfig': no URL paths identified
Rejected bean name 'authServerOAuth2Config': no URL paths identified
Rejected bean name 'methodSecurityConfig': no URL paths identified
Rejected bean name 'OAuth2ResourceServerConfig': no URL paths identified
Rejected bean name 'OAuth2SecurityConfig': no URL paths identified
Rejected bean name 'companyRestController': no URL paths identified
Rejected bean name 'departmentRestController': no URL paths identified
Rejected bean name 'deviceRestController': no URL paths identified
Rejected bean name 'driverRestController': no URL paths identified
Rejected bean name 'companyDaoImpl': no URL paths identified
Rejected bean name 'customerDaoImpl': no URL paths identified
Rejected bean name 'departmentDaoImpl': no URL paths identified
Rejected bean name 'deviceDaoImpl': no URL paths identified
Rejected bean name 'driverDaoImpl': no URL paths identified
Rejected bean name 'fuelDeliveryDaoImpl': no URL paths identified
Rejected bean name 'purchaseOrderDaoImpl': no URL paths identified
Rejected bean name 'truckDaoImpl': no URL paths identified
Rejected bean name 'companyService': no URL paths identified
Rejected bean name 'customerService': no URL paths identified
Rejected bean name 'departmentService': no URL paths identified
Rejected bean name 'devicesService': no URL paths identified
Rejected bean name 'driverService': no URL paths identified
Rejected bean name 'fuelDeliveryService': no URL paths identified
Rejected bean name 'purchaseOrderService': no URL paths identified
Rejected bean name 'truckService': no URL paths identified
Rejected bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar': no URL paths identified
Rejected bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration': no URL paths identified
Rejected bean name 'authorizationEndpoint': no URL paths identified
Rejected bean name 'tokenEndpoint': no URL paths identified
Rejected bean name 'checkTokenEndpoint': no URL paths identified
Rejected bean name 'whitelabelApprovalEndpoint': no URL paths identified
Rejected bean name 'whitelabelErrorEndpoint': no URL paths identified
Rejected bean name 'oauth2EndpointHandlerMapping': no URL paths identified
Rejected bean name 'consumerTokenServices': no URL paths identified
Rejected bean name 'defaultAuthorizationServerTokenServices': no URL paths identified
Rejected bean name 'org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration': no URL paths identified
Rejected bean name 'clientDetailsServiceConfigurer': no URL paths identified
Rejected bean name 'scopedTarget.clientDetailsService': no URL paths identified
Rejected bean name 'clientDetailsService': no URL paths identified
Rejected bean name 'org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration': no URL paths identified
Rejected bean name 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration': no URL paths identified
Rejected bean name 'authenticationManagerBuilder': no URL paths identified
Rejected bean name 'enableGlobalAuthenticationAutowiredConfigurer': no URL paths identified
Rejected bean name 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration': no URL paths identified
Rejected bean name 'objectPostProcessor': no URL paths identified
Rejected bean name 'methodSecurityInterceptor': no URL paths identified
Rejected bean name 'methodSecurityMetadataSource': no URL paths identified
Rejected bean name 'preInvocationAuthorizationAdvice': no URL paths identified
Rejected bean name 'metaDataSourceAdvisor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': no URL paths identified
Rejected bean name 'delegatingApplicationListener': no URL paths identified
Rejected bean name 'webSecurityExpressionHandler': no URL paths identified
Rejected bean name 'springSecurityFilterChain': no URL paths identified
Rejected bean name 'privilegeEvaluator': no URL paths identified
Rejected bean name 'autowiredWebSecurityConfigurersIgnoreParents': no URL paths identified
Rejected bean name 'authenticationManagerBean': no URL paths identified
Rejected bean name 'tokenStore': no URL paths identified
Rejected bean name 'userApprovalHandler': no URL paths identified
Rejected bean name 'approvalStore': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration': no URL paths identified
Rejected bean name 'requestMappingHandlerMapping': no URL paths identified
Rejected bean name 'mvcPathMatcher': no URL paths identified
Rejected bean name 'mvcUrlPathHelper': no URL paths identified
Rejected bean name 'mvcContentNegotiationManager': no URL paths identified
Rejected bean name 'viewControllerHandlerMapping': no URL paths identified
Rejected bean name 'beanNameHandlerMapping': no URL paths identified
Rejected bean name 'resourceHandlerMapping': no URL paths identified
Rejected bean name 'mvcResourceUrlProvider': no URL paths identified
Rejected bean name 'defaultServletHandlerMapping': no URL paths identified
Rejected bean name 'requestMappingHandlerAdapter': no URL paths identified
Rejected bean name 'mvcConversionService': no URL paths identified
Rejected bean name 'mvcValidator': no URL paths identified
Rejected bean name 'mvcUriComponentsContributor': no URL paths identified
Rejected bean name 'httpRequestHandlerAdapter': no URL paths identified
Rejected bean name 'simpleControllerHandlerAdapter': no URL paths identified
Rejected bean name 'handlerExceptionResolver': no URL paths identified
Rejected bean name 'mvcViewResolver': no URL paths identified
Rejected bean name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': no URL paths identified
Rejected bean name 'org.springframework.transaction.config.internalTransactionAdvisor': no URL paths identified
Rejected bean name 'transactionAttributeSource': no URL paths identified
Rejected bean name 'transactionInterceptor': no URL paths identified
Rejected bean name 'org.springframework.transaction.config.internalTransactionalEventListenerFactory': no URL paths identified
Rejected bean name 'urlBasedViewResolver': no URL paths identified
Rejected bean name 'dataSource': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'jpaVendorAdapter': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletContext': no URL paths identified
Rejected bean name 'contextParameters': no URL paths identified
Rejected bean name 'contextAttributes': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'beanNameHandlerMapping'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Creating instance of bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Returning cached instance of singleton bean 'mvcContentNegotiationManager'
Eagerly caching bean 'resourceHandlerMapping' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating instance of bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'defaultServletHandlerMapping' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating instance of bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Returning cached instance of singleton bean 'mvcContentNegotiationManager'
Returning cached instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Creating instance of bean 'mvcValidator'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'mvcValidator' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcValidator'
Eagerly caching bean 'requestMappingHandlerAdapter' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'requestMappingHandlerAdapter'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1f57539: startup date [Sun Jun 11 10:04:00 VET 2017]; root of context hierarchy
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'mvcConversionService'
Returning cached instance of singleton bean 'mvcValidator'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Creating instance of bean 'mvcUriComponentsContributor'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'mvcConversionService'
Eagerly caching bean 'mvcUriComponentsContributor' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcUriComponentsContributor'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating instance of bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'httpRequestHandlerAdapter' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating instance of bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Eagerly caching bean 'simpleControllerHandlerAdapter' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'handlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Returning cached instance of singleton bean 'mvcContentNegotiationManager'
Looking for exception mappings: org.springframework.web.context.support.GenericWebApplicationContext@1f57539: startup date [Sun Jun 11 10:04:00 VET 2017]; root of context hierarchy
Eagerly caching bean 'handlerExceptionResolver' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'handlerExceptionResolver'
Creating shared instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'mvcViewResolver'
Returning cached instance of singleton bean 'org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration'
Returning cached instance of singleton bean 'mvcContentNegotiationManager'
Eagerly caching bean 'mvcViewResolver' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'mvcViewResolver'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'mvcViewResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'transactionAttributeSource'
Returning cached instance of singleton bean 'transactionInterceptor'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'urlBasedViewResolver'
Creating instance of bean 'urlBasedViewResolver'
Returning cached instance of singleton bean 'appConfig'
Eagerly caching bean 'urlBasedViewResolver' to allow for resolving potential circular references
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'urlBasedViewResolver'
Returning cached instance of singleton bean 'dataSource'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'jpaVendorAdapter'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Returning cached instance of singleton bean 'appConfig'
Returning cached instance of singleton bean 'entityManagerFactory'
Autowiring by type from bean name 'transactionManager' via factory method to bean named 'entityManagerFactory'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'transactionManager'
Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@58015e56]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'delegatingApplicationListener'
Returning cached instance of singleton bean 'mvcResourceUrlProvider'
Looking for resource handler mappings
No resource handling mappings found
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
Storing ApplicationContext in cache under key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DriverService com.govansnv.fuel.test.IFindBySearchTermTest.driverService
Returning cached instance of singleton bean 'driverService'
Autowiring by type from bean name 'com.govansnv.fuel.test.IFindBySearchTermTest' to bean named 'driverService'
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DepartmentService com.govansnv.fuel.test.IFindBySearchTermTest.departService
Returning cached instance of singleton bean 'departmentService'
Autowiring by type from bean name 'com.govansnv.fuel.test.IFindBySearchTermTest' to bean named 'departmentService'
Returning cached instance of singleton bean 'metaDataSourceAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Preparing test instance class com.govansnv.fuel.test.IFindBySearchTermTest for DBUnit
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
DBUnit tests will run using databaseConnection "dataSource", datasets will be loaded using class com.github.springtestdbunit.dataset.FlatXmlDataSetLoader
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
Returning cached instance of singleton bean 'dataSource'
Executing Setup of @DatabaseTest using CLEAN_INSERT on [AbstractDataSet[_orderedTableNameMap=null]]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: SELECT d FROM com.govansnv.fuel.model.Driver d WHERE d.id = :Id
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'govansnv'
    |  |     |  |  |  \-[IDENT] Node: 'fuel'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Driver'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Id'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : com.govansnv.fuel.model.Driver (d) -> driver0_
Resolved : d -> driver0_.id
Resolved : d -> driver0_.id
getDataType() : id -> org.hibernate.type.IntegerType@150ab4ed
Resolved : d.id -> driver0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} driver0_.id ) ( FromClause{level=1} Driver driver0_ ) ( WHERE ( = ( driver0_.id driver0_.id id ) ? ) ) )
Using FROM fragment [Driver driver0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Driver)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'driver0_.id as id1_3_' {alias=d, className=com.govansnv.fuel.model.Driver, tableAlias=driver0_}
    |  \-[SQL_TOKEN] SqlFragment: 'driver0_.department_id as departme6_3_, driver0_.firstname as firstnam2_3_, driver0_.lastname as lastname3_3_, driver0_.passnum as passnum4_3_, driver0_.uname as uname5_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[driver0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Driver driver0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Driver,tableAlias=driver0_,origin=null,columns={,className=com.govansnv.fuel.model.Driver}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'driver0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=driver0_,className=com.govansnv.fuel.model.Driver,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'driver0_.id' {alias=d, className=com.govansnv.fuel.model.Driver, tableAlias=driver0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Id, expectedType=org.hibernate.type.IntegerType@150ab4ed}

throwQueryException() : no errors
HQL: SELECT d FROM com.govansnv.fuel.model.Driver d WHERE d.id = :Id
SQL: select driver0_.id as id1_3_, driver0_.department_id as departme6_3_, driver0_.firstname as firstnam2_3_, driver0_.lastname as lastname3_3_, driver0_.passnum as passnum4_3_, driver0_.uname as uname5_3_ from Driver driver0_ where driver0_.id=?
throwQueryException() : no errors

    select
        driver0_.id as id1_3_,
        driver0_.department_id as departme6_3_,
        driver0_.firstname as firstnam2_3_,
        driver0_.lastname as lastname3_3_,
        driver0_.passnum as passnum4_3_,
        driver0_.uname as uname5_3_ 
    from
        Driver driver0_ 
    where
        driver0_.id=?
Obtaining JDBC connection
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Obtained JDBC connection
Result set row: 0
Result row: EntityKey[com.govansnv.fuel.model.Driver#2]
Resolving associations for [com.govansnv.fuel.model.Driver#2]

    select
        department0_.id as id1_5_0_,
        department0_.company_id as company_3_5_0_,
        department0_.department_name as departme2_5_0_,
        company1_.id as id1_0_1_,
        company1_.address as address2_0_1_,
        company1_.city as city3_0_1_,
        company1_.company_name as company_4_0_1_,
        company1_.fax as fax5_0_1_,
        company1_.phone as phone6_0_1_,
        company1_.postal_code as postal_c7_0_1_,
        company1_.slogan as slogan8_0_1_,
        customers2_.company_id as company_7_0_2_,
        customers2_.id as id1_1_2_,
        customers2_.id as id1_1_3_,
        customers2_.barcode as barcode2_1_3_,
        customers2_.company_id as company_7_1_3_,
        customers2_.customer_id as customer3_1_3_,
        customers2_.customer_ship_to as customer4_1_3_,
        customers2_.customer_sold_to as customer5_1_3_,
        customers2_.ship_to as ship_to6_1_3_,
        devices3_.department_id as departme4_5_4_,
        devices3_.id as id1_2_4_,
        devices3_.id as id1_2_5_,
        devices3_.department_id as departme4_2_5_,
        devices3_.device_no as device_n2_2_5_,
        devices3_.last_synch as last_syn3_2_5_ 
    from
        department department0_ 
    left outer join
        Company company1_ 
            on department0_.company_id=company1_.id 
    left outer join
        Customer customers2_ 
            on company1_.id=customers2_.company_id 
    left outer join
        Device devices3_ 
            on department0_.id=devices3_.department_id 
    where
        department0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #1
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #2
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #3
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #4
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Resolving associations for [com.govansnv.fuel.model.Department#1]
Done materializing entity [com.govansnv.fuel.model.Department#1]
Resolving associations for [com.govansnv.fuel.model.Company#1]
Done materializing entity [com.govansnv.fuel.model.Company#1]
Resolving associations for [com.govansnv.fuel.model.Device#1]
Done materializing entity [com.govansnv.fuel.model.Device#1]
Resolving associations for [com.govansnv.fuel.model.Device#2]
Done materializing entity [com.govansnv.fuel.model.Device#2]
Resolving associations for [com.govansnv.fuel.model.Device#3]
Done materializing entity [com.govansnv.fuel.model.Device#3]
Resolving associations for [com.govansnv.fuel.model.Device#4]
Done materializing entity [com.govansnv.fuel.model.Device#4]
Resolving associations for [com.govansnv.fuel.model.Device#5]
Done materializing entity [com.govansnv.fuel.model.Device#5]
1 collections were found in result set for role: com.govansnv.fuel.model.Company.customers
Collection fully initialized: [com.govansnv.fuel.model.Company.customers#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.customers
1 collections were found in result set for role: com.govansnv.fuel.model.Department.devices
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#1]
1 collections initialized for role: com.govansnv.fuel.model.Department.devices
Done entity load : com.govansnv.fuel.model.Department#1
Done materializing entity [com.govansnv.fuel.model.Driver#2]
Loading collection: [com.govansnv.fuel.model.Company.departments#1]

    select
        department0_.company_id as company_3_0_0_,
        department0_.id as id1_5_0_,
        department0_.id as id1_5_1_,
        department0_.company_id as company_3_5_1_,
        department0_.department_name as departme2_5_1_ 
    from
        department department0_ 
    where
        department0_.company_id=?
Preparing collection intializer : [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #0
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #1
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Resolving associations for [com.govansnv.fuel.model.Department#2]
Done materializing entity [com.govansnv.fuel.model.Department#2]
1 collections were found in result set for role: com.govansnv.fuel.model.Company.departments
Collection fully initialized: [com.govansnv.fuel.model.Company.departments#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.departments
Done loading collection
Loading collection: [com.govansnv.fuel.model.Department.devices#2]

    select
        devices0_.department_id as departme4_5_0_,
        devices0_.id as id1_2_0_,
        devices0_.id as id1_2_1_,
        devices0_.department_id as departme4_2_1_,
        devices0_.device_no as device_n2_2_1_,
        devices0_.last_synch as last_syn3_2_1_ 
    from
        Device devices0_ 
    where
        devices0_.department_id=?
Preparing collection intializer : [com.govansnv.fuel.model.Department.devices#2]
1 collections were found in result set for role: com.govansnv.fuel.model.Department.devices
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#2]
1 collections initialized for role: com.govansnv.fuel.model.Department.devices
Done loading collection
Closing JPA EntityManager
Releasing JDBC connection
Released JDBC connection
Returning JDBC Connection to DataSource
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.govansnv.fuel.test.IFindBySearchTermTest]
Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = IFindBySearchTermTest, testInstance = com.govansnv.fuel.test.IFindBySearchTermTest@54a2d96e, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DriverService com.govansnv.fuel.test.IFindBySearchTermTest.driverService
Returning cached instance of singleton bean 'driverService'
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DepartmentService com.govansnv.fuel.test.IFindBySearchTermTest.departService
Returning cached instance of singleton bean 'departmentService'
Preparing test instance class com.govansnv.fuel.test.IFindBySearchTermTest for DBUnit
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
DBUnit tests will run using databaseConnection "dataSource", datasets will be loaded using class com.github.springtestdbunit.dataset.FlatXmlDataSetLoader
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
Returning cached instance of singleton bean 'dataSource'
Executing Setup of @DatabaseTest using CLEAN_INSERT on [AbstractDataSet[_orderedTableNameMap=null]]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: SELECT d FROM com.govansnv.fuel.model.Driver d  ORDER BY d.firstname ASC
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'govansnv'
    |  |     |  |  |  \-[IDENT] Node: 'fuel'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Driver'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'd'
       |  \-[IDENT] Node: 'firstname'
       \-[ASCENDING] Node: 'ASC'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : com.govansnv.fuel.model.Driver (d) -> driver0_
Resolved : d -> driver0_.id
Resolved : d -> driver0_.id
getDataType() : firstname -> org.hibernate.type.StringType@5d018107
Resolved : d.firstname -> driver0_.firstname
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} driver0_.id ) ( FromClause{level=1} Driver driver0_ ) ( ORDER ( driver0_.firstname driver0_.id firstname ) ASC ) )
Using FROM fragment [Driver driver0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Driver)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'driver0_.id as id1_3_' {alias=d, className=com.govansnv.fuel.model.Driver, tableAlias=driver0_}
    |  \-[SQL_TOKEN] SqlFragment: 'driver0_.department_id as departme6_3_, driver0_.firstname as firstnam2_3_, driver0_.lastname as lastname3_3_, driver0_.passnum as passnum4_3_, driver0_.uname as uname5_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[driver0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Driver driver0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Driver,tableAlias=driver0_,origin=null,columns={,className=com.govansnv.fuel.model.Driver}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'driver0_.firstname' {propertyName=firstname,dereferenceType=PRIMITIVE,getPropertyPath=firstname,path=d.firstname,tableAlias=driver0_,className=com.govansnv.fuel.model.Driver,classAlias=d}
       |  +-[ALIAS_REF] IdentNode: 'driver0_.id' {alias=d, className=com.govansnv.fuel.model.Driver, tableAlias=driver0_}
       |  \-[IDENT] IdentNode: 'firstname' {originalText=firstname}
       \-[ASCENDING] SqlNode: 'ASC'

throwQueryException() : no errors
HQL: SELECT d FROM com.govansnv.fuel.model.Driver d  ORDER BY d.firstname ASC
SQL: select driver0_.id as id1_3_, driver0_.department_id as departme6_3_, driver0_.firstname as firstnam2_3_, driver0_.lastname as lastname3_3_, driver0_.passnum as passnum4_3_, driver0_.uname as uname5_3_ from Driver driver0_ order by driver0_.firstname ASC
throwQueryException() : no errors

    select
        driver0_.id as id1_3_,
        driver0_.department_id as departme6_3_,
        driver0_.firstname as firstnam2_3_,
        driver0_.lastname as lastname3_3_,
        driver0_.passnum as passnum4_3_,
        driver0_.uname as uname5_3_ 
    from
        Driver driver0_ 
    order by
        driver0_.firstname ASC
Obtaining JDBC connection
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Obtained JDBC connection
Result set row: 0
Result row: EntityKey[com.govansnv.fuel.model.Driver#1]
Result set row: 1
Result row: EntityKey[com.govansnv.fuel.model.Driver#3]
Result set row: 2
Result row: EntityKey[com.govansnv.fuel.model.Driver#2]
Resolving associations for [com.govansnv.fuel.model.Driver#1]

    select
        department0_.id as id1_5_0_,
        department0_.company_id as company_3_5_0_,
        department0_.department_name as departme2_5_0_,
        company1_.id as id1_0_1_,
        company1_.address as address2_0_1_,
        company1_.city as city3_0_1_,
        company1_.company_name as company_4_0_1_,
        company1_.fax as fax5_0_1_,
        company1_.phone as phone6_0_1_,
        company1_.postal_code as postal_c7_0_1_,
        company1_.slogan as slogan8_0_1_,
        customers2_.company_id as company_7_0_2_,
        customers2_.id as id1_1_2_,
        customers2_.id as id1_1_3_,
        customers2_.barcode as barcode2_1_3_,
        customers2_.company_id as company_7_1_3_,
        customers2_.customer_id as customer3_1_3_,
        customers2_.customer_ship_to as customer4_1_3_,
        customers2_.customer_sold_to as customer5_1_3_,
        customers2_.ship_to as ship_to6_1_3_,
        devices3_.department_id as departme4_5_4_,
        devices3_.id as id1_2_4_,
        devices3_.id as id1_2_5_,
        devices3_.department_id as departme4_2_5_,
        devices3_.device_no as device_n2_2_5_,
        devices3_.last_synch as last_syn3_2_5_ 
    from
        department department0_ 
    left outer join
        Company company1_ 
            on department0_.company_id=company1_.id 
    left outer join
        Customer customers2_ 
            on company1_.id=customers2_.company_id 
    left outer join
        Device devices3_ 
            on department0_.id=devices3_.department_id 
    where
        department0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #1
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #2
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #3
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #4
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Resolving associations for [com.govansnv.fuel.model.Department#1]
Done materializing entity [com.govansnv.fuel.model.Department#1]
Resolving associations for [com.govansnv.fuel.model.Company#1]
Done materializing entity [com.govansnv.fuel.model.Company#1]
Resolving associations for [com.govansnv.fuel.model.Device#1]
Done materializing entity [com.govansnv.fuel.model.Device#1]
Resolving associations for [com.govansnv.fuel.model.Device#2]
Done materializing entity [com.govansnv.fuel.model.Device#2]
Resolving associations for [com.govansnv.fuel.model.Device#3]
Done materializing entity [com.govansnv.fuel.model.Device#3]
Resolving associations for [com.govansnv.fuel.model.Device#4]
Done materializing entity [com.govansnv.fuel.model.Device#4]
Resolving associations for [com.govansnv.fuel.model.Device#5]
Done materializing entity [com.govansnv.fuel.model.Device#5]
1 collections were found in result set for role: com.govansnv.fuel.model.Company.customers
Collection fully initialized: [com.govansnv.fuel.model.Company.customers#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.customers
1 collections were found in result set for role: com.govansnv.fuel.model.Department.devices
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#1]
1 collections initialized for role: com.govansnv.fuel.model.Department.devices
Done entity load : com.govansnv.fuel.model.Department#1
Done materializing entity [com.govansnv.fuel.model.Driver#1]
Resolving associations for [com.govansnv.fuel.model.Driver#3]
Done materializing entity [com.govansnv.fuel.model.Driver#3]
Resolving associations for [com.govansnv.fuel.model.Driver#2]
Done materializing entity [com.govansnv.fuel.model.Driver#2]
Loading collection: [com.govansnv.fuel.model.Company.departments#1]

    select
        department0_.company_id as company_3_0_0_,
        department0_.id as id1_5_0_,
        department0_.id as id1_5_1_,
        department0_.company_id as company_3_5_1_,
        department0_.department_name as departme2_5_1_ 
    from
        department department0_ 
    where
        department0_.company_id=?
Preparing collection intializer : [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #0
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #1
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Resolving associations for [com.govansnv.fuel.model.Department#2]
Done materializing entity [com.govansnv.fuel.model.Department#2]
1 collections were found in result set for role: com.govansnv.fuel.model.Company.departments
Collection fully initialized: [com.govansnv.fuel.model.Company.departments#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.departments
Done loading collection
Loading collection: [com.govansnv.fuel.model.Department.devices#2]

    select
        devices0_.department_id as departme4_5_0_,
        devices0_.id as id1_2_0_,
        devices0_.id as id1_2_1_,
        devices0_.department_id as departme4_2_1_,
        devices0_.device_no as device_n2_2_1_,
        devices0_.last_synch as last_syn3_2_1_ 
    from
        Device devices0_ 
    where
        devices0_.department_id=?
Preparing collection intializer : [com.govansnv.fuel.model.Department.devices#2]
1 collections were found in result set for role: com.govansnv.fuel.model.Department.devices
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#2]
1 collections initialized for role: com.govansnv.fuel.model.Department.devices
Done loading collection
Closing JPA EntityManager
Releasing JDBC connection
Released JDBC connection
Returning JDBC Connection to DataSource
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.govansnv.fuel.test.IFindBySearchTermTest]
Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = IFindBySearchTermTest, testInstance = com.govansnv.fuel.test.IFindBySearchTermTest@68c9e023, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 10, missCount = 1]
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DriverService com.govansnv.fuel.test.IFindBySearchTermTest.driverService
Returning cached instance of singleton bean 'driverService'
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DepartmentService com.govansnv.fuel.test.IFindBySearchTermTest.departService
Returning cached instance of singleton bean 'departmentService'
Preparing test instance class com.govansnv.fuel.test.IFindBySearchTermTest for DBUnit
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 11, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 12, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 13, missCount = 1]
DBUnit tests will run using databaseConnection "dataSource", datasets will be loaded using class com.github.springtestdbunit.dataset.FlatXmlDataSetLoader
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 14, missCount = 1]
Returning cached instance of singleton bean 'dataSource'
Executing Setup of @DatabaseTest using CLEAN_INSERT on [AbstractDataSet[_orderedTableNameMap=null]]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Creating new EntityManager for shared EntityManager invocation

    select
        driver0_.id as id1_3_,
        driver0_.department_id as departme6_3_,
        driver0_.firstname as firstnam2_3_,
        driver0_.lastname as lastname3_3_,
        driver0_.passnum as passnum4_3_,
        driver0_.uname as uname5_3_ 
    from
        Driver driver0_ 
    where
        driver0_.id=?
Obtaining JDBC connection
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Obtained JDBC connection
Result set row: 0
Result row: EntityKey[com.govansnv.fuel.model.Driver#2]
Resolving associations for [com.govansnv.fuel.model.Driver#2]

    select
        department0_.id as id1_5_0_,
        department0_.company_id as company_3_5_0_,
        department0_.department_name as departme2_5_0_,
        company1_.id as id1_0_1_,
        company1_.address as address2_0_1_,
        company1_.city as city3_0_1_,
        company1_.company_name as company_4_0_1_,
        company1_.fax as fax5_0_1_,
        company1_.phone as phone6_0_1_,
        company1_.postal_code as postal_c7_0_1_,
        company1_.slogan as slogan8_0_1_,
        customers2_.company_id as company_7_0_2_,
        customers2_.id as id1_1_2_,
        customers2_.id as id1_1_3_,
        customers2_.barcode as barcode2_1_3_,
        customers2_.company_id as company_7_1_3_,
        customers2_.customer_id as customer3_1_3_,
        customers2_.customer_ship_to as customer4_1_3_,
        customers2_.customer_sold_to as customer5_1_3_,
        customers2_.ship_to as ship_to6_1_3_,
        devices3_.department_id as departme4_5_4_,
        devices3_.id as id1_2_4_,
        devices3_.id as id1_2_5_,
        devices3_.department_id as departme4_2_5_,
        devices3_.device_no as device_n2_2_5_,
        devices3_.last_synch as last_syn3_2_5_ 
    from
        department department0_ 
    left outer join
        Company company1_ 
            on department0_.company_id=company1_.id 
    left outer join
        Customer customers2_ 
            on company1_.id=customers2_.company_id 
    left outer join
        Device devices3_ 
            on department0_.id=devices3_.department_id 
    where
        department0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #1
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #2
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #3
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Starting ResultSet row #4
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Resolving associations for [com.govansnv.fuel.model.Department#1]
Done materializing entity [com.govansnv.fuel.model.Department#1]
Resolving associations for [com.govansnv.fuel.model.Company#1]
Done materializing entity [com.govansnv.fuel.model.Company#1]
Resolving associations for [com.govansnv.fuel.model.Device#1]
Done materializing entity [com.govansnv.fuel.model.Device#1]
Resolving associations for [com.govansnv.fuel.model.Device#2]
Done materializing entity [com.govansnv.fuel.model.Device#2]
Resolving associations for [com.govansnv.fuel.model.Device#3]
Done materializing entity [com.govansnv.fuel.model.Device#3]
Resolving associations for [com.govansnv.fuel.model.Device#4]
Done materializing entity [com.govansnv.fuel.model.Device#4]
Resolving associations for [com.govansnv.fuel.model.Device#5]
Done materializing entity [com.govansnv.fuel.model.Device#5]
1 collections were found in result set for role: com.govansnv.fuel.model.Company.customers
Collection fully initialized: [com.govansnv.fuel.model.Company.customers#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.customers
1 collections were found in result set for role: com.govansnv.fuel.model.Department.devices
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#1]
1 collections initialized for role: com.govansnv.fuel.model.Department.devices
Done entity load : com.govansnv.fuel.model.Department#1
Done materializing entity [com.govansnv.fuel.model.Driver#2]
Loading collection: [com.govansnv.fuel.model.Company.departments#1]

    select
        department0_.company_id as company_3_0_0_,
        department0_.id as id1_5_0_,
        department0_.id as id1_5_1_,
        department0_.company_id as company_3_5_1_,
        department0_.department_name as departme2_5_1_ 
    from
        department department0_ 
    where
        department0_.company_id=?
Preparing collection intializer : [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #0
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #1
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Resolving associations for [com.govansnv.fuel.model.Department#2]
Done materializing entity [com.govansnv.fuel.model.Department#2]
1 collections were found in result set for role: com.govansnv.fuel.model.Company.departments
Collection fully initialized: [com.govansnv.fuel.model.Company.departments#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.departments
Done loading collection
Loading collection: [com.govansnv.fuel.model.Department.devices#2]

    select
        devices0_.department_id as departme4_5_0_,
        devices0_.id as id1_2_0_,
        devices0_.id as id1_2_1_,
        devices0_.department_id as departme4_2_1_,
        devices0_.device_no as device_n2_2_1_,
        devices0_.last_synch as last_syn3_2_1_ 
    from
        Device devices0_ 
    where
        devices0_.department_id=?
Preparing collection intializer : [com.govansnv.fuel.model.Department.devices#2]
1 collections were found in result set for role: com.govansnv.fuel.model.Department.devices
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#2]
1 collections initialized for role: com.govansnv.fuel.model.Department.devices
Done loading collection
Closing JPA EntityManager
Releasing JDBC connection
Released JDBC connection
Returning JDBC Connection to DataSource
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.govansnv.fuel.test.IFindBySearchTermTest]
Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = IFindBySearchTermTest, testInstance = com.govansnv.fuel.test.IFindBySearchTermTest@53d2d002, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 15, missCount = 1]
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DriverService com.govansnv.fuel.test.IFindBySearchTermTest.driverService
Returning cached instance of singleton bean 'driverService'
Processing injected element of bean 'com.govansnv.fuel.test.IFindBySearchTermTest': AutowiredFieldElement for com.govansnv.fuel.service.DepartmentService com.govansnv.fuel.test.IFindBySearchTermTest.departService
Returning cached instance of singleton bean 'departmentService'
Preparing test instance class com.govansnv.fuel.test.IFindBySearchTermTest for DBUnit
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 16, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 17, missCount = 1]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 18, missCount = 1]
DBUnit tests will run using databaseConnection "dataSource", datasets will be loaded using class com.github.springtestdbunit.dataset.FlatXmlDataSetLoader
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@3224f60b testClass = IFindBySearchTermTest, locations = '{}', classes = '{class com.govansnv.fuel.config.AppConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@403c3a01 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 19, missCount = 1]
Returning cached instance of singleton bean 'dataSource'
Executing Setup of @DatabaseTest using CLEAN_INSERT on [AbstractDataSet[_orderedTableNameMap=null]]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [com.govansnv.fuel.dao.impl.DepartmentDaoImpl.getAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@16132f21] for JPA transaction
begin
Obtaining JDBC connection
Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/valerodb?useSSL=false]
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@39de9bda]
parse() - HQL: SELECT d FROM com.govansnv.fuel.model.Department d  ORDER BY 1 ASC
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'govansnv'
    |  |     |  |  |  \-[IDENT] Node: 'fuel'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[ORDER] Node: 'ORDER'
       +-[NUM_INT] Node: '1'
       \-[ASCENDING] Node: 'ASC'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : com.govansnv.fuel.model.Department (d) -> department0_
Resolved : d -> department0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} department0_.id ) ( FromClause{level=1} department department0_ ) ( ORDER 1 ASC ) )
Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'department0_.id as id1_5_' {alias=d, className=com.govansnv.fuel.model.Department, tableAlias=department0_}
    |  \-[SQL_TOKEN] SqlFragment: 'department0_.company_id as company_3_5_, department0_.department_name as departme2_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.govansnv.fuel.model.Department}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[NUM_INT] LiteralNode: '1'
       \-[ASCENDING] SqlNode: 'ASC'

throwQueryException() : no errors
HQL: SELECT d FROM com.govansnv.fuel.model.Department d  ORDER BY 1 ASC
SQL: select department0_.id as id1_5_, department0_.company_id as company_3_5_, department0_.department_name as departme2_5_ from department department0_ order by 1 ASC
throwQueryException() : no errors

    select
        department0_.id as id1_5_,
        department0_.company_id as company_3_5_,
        department0_.department_name as departme2_5_ 
    from
        department department0_ 
    order by
        1 ASC
Result set row: 0
Result row: EntityKey[com.govansnv.fuel.model.Department#1]
Result set row: 1
Result row: EntityKey[com.govansnv.fuel.model.Department#2]
Resolving associations for [com.govansnv.fuel.model.Department#1]

    select
        company0_.id as id1_0_0_,
        company0_.address as address2_0_0_,
        company0_.city as city3_0_0_,
        company0_.company_name as company_4_0_0_,
        company0_.fax as fax5_0_0_,
        company0_.phone as phone6_0_0_,
        company0_.postal_code as postal_c7_0_0_,
        company0_.slogan as slogan8_0_0_,
        customers1_.company_id as company_7_0_1_,
        customers1_.id as id1_1_1_,
        customers1_.id as id1_1_2_,
        customers1_.barcode as barcode2_1_2_,
        customers1_.company_id as company_7_1_2_,
        customers1_.customer_id as customer3_1_2_,
        customers1_.customer_ship_to as customer4_1_2_,
        customers1_.customer_sold_to as customer5_1_2_,
        customers1_.ship_to as ship_to6_1_2_,
        department2_.company_id as company_3_0_3_,
        department2_.id as id1_5_3_,
        department2_.id as id1_5_4_,
        department2_.company_id as company_3_5_4_,
        department2_.department_name as departme2_5_4_,
        devices3_.department_id as departme4_5_5_,
        devices3_.id as id1_2_5_,
        devices3_.id as id1_2_6_,
        devices3_.department_id as departme4_2_6_,
        devices3_.device_no as device_n2_2_6_,
        devices3_.last_synch as last_syn3_2_6_ 
    from
        Company company0_ 
    left outer join
        Customer customers1_ 
            on company0_.id=customers1_.company_id 
    left outer join
        department department2_ 
            on company0_.id=department2_.company_id 
    left outer join
        Device devices3_ 
            on department2_.id=devices3_.department_id 
    where
        company0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #1
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #2
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #3
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #4
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Found row of collection: [com.govansnv.fuel.model.Department.devices#1]
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Starting ResultSet row #5
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Company.customers#1]
Result set contains (possibly empty) collection: [com.govansnv.fuel.model.Department.devices#2]
Found row of collection: [com.govansnv.fuel.model.Company.departments#1]
Resolving associations for [com.govansnv.fuel.model.Company#1]
Done materializing entity [com.govansnv.fuel.model.Company#1]
Resolving associations for [com.govansnv.fuel.model.Device#1]
Done materializing entity [com.govansnv.fuel.model.Device#1]
Resolving associations for [com.govansnv.fuel.model.Device#2]
Done materializing entity [com.govansnv.fuel.model.Device#2]
Resolving associations for [com.govansnv.fuel.model.Device#3]
Done materializing entity [com.govansnv.fuel.model.Device#3]
Resolving associations for [com.govansnv.fuel.model.Device#4]
Done materializing entity [com.govansnv.fuel.model.Device#4]
Resolving associations for [com.govansnv.fuel.model.Device#5]
Done materializing entity [com.govansnv.fuel.model.Device#5]
1 collections were found in result set for role: com.govansnv.fuel.model.Company.customers
Collection fully initialized: [com.govansnv.fuel.model.Company.customers#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.customers
2 collections were found in result set for role: com.govansnv.fuel.model.Department.devices
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#1]
Collection fully initialized: [com.govansnv.fuel.model.Department.devices#2]
2 collections initialized for role: com.govansnv.fuel.model.Department.devices
1 collections were found in result set for role: com.govansnv.fuel.model.Company.departments
Collection fully initialized: [com.govansnv.fuel.model.Company.departments#1]
1 collections initialized for role: com.govansnv.fuel.model.Company.departments
Done entity load : com.govansnv.fuel.model.Company#1
Done materializing entity [com.govansnv.fuel.model.Department#1]
Resolving associations for [com.govansnv.fuel.model.Department#2]
Done materializing entity [com.govansnv.fuel.model.Department#2]
Initiating transaction commit
Committing JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@16132f21]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.govansnv.fuel.model.Department.devices#1], was: [com.govansnv.fuel.model.Department.devices#1] (initialized)
Collection found: [com.govansnv.fuel.model.Department.devices#2], was: [com.govansnv.fuel.model.Department.devices#2] (initialized)
Collection found: [com.govansnv.fuel.model.Company.customers#1], was: [com.govansnv.fuel.model.Company.customers#1] (initialized)
Collection found: [com.govansnv.fuel.model.Company.departments#1], was: [com.govansnv.fuel.model.Company.departments#1] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
Listing entities:
com.govansnv.fuel.model.Department{departmentName=Distribution, devices=[com.govansnv.fuel.model.Device#1, com.govansnv.fuel.model.Device#5, com.govansnv.fuel.model.Device#4, com.govansnv.fuel.model.Device#2, com.govansnv.fuel.model.Device#3], company=com.govansnv.fuel.model.Company#1, id=1}
com.govansnv.fuel.model.Company{city=Oranjestad, phone=00297-5882001, companyName=Citgo Aruba, postalCode=None, addres=San Nicolas straat 40, id=1, customers=[], departments=[com.govansnv.fuel.model.Department#1, com.govansnv.fuel.model.Department#2], fax=00297-5882044, slogan=Let us be great}
com.govansnv.fuel.model.Device{id=1, deviceNo=1, department=com.govansnv.fuel.model.Department#1, lastSynch=null}
com.govansnv.fuel.model.Department{departmentName=Airport, devices=[], company=com.govansnv.fuel.model.Company#1, id=2}
com.govansnv.fuel.model.Device{id=2, deviceNo=2, department=com.govansnv.fuel.model.Department#1, lastSynch=null}
com.govansnv.fuel.model.Device{id=3, deviceNo=3, department=com.govansnv.fuel.model.Department#1, lastSynch=null}
com.govansnv.fuel.model.Device{id=4, deviceNo=4, department=com.govansnv.fuel.model.Department#1, lastSynch=null}
com.govansnv.fuel.model.Device{id=5, deviceNo=5, department=com.govansnv.fuel.model.Department#1, lastSynch=null}
committed JDBC Connection
re-enabling autocommit
Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@16132f21] after transaction
Closing JPA EntityManager
Releasing JDBC connection
Released JDBC connection
Returning JDBC Connection to DataSource
Closing org.springframework.web.context.support.GenericWebApplicationContext@1f57539: startup date [Sun Jun 11 10:04:00 VET 2017]; root of context hierarchy
Returning cached instance of singleton bean 'delegatingApplicationListener'
Returning cached instance of singleton bean 'lifecycleProcessor'
Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a79c292: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,appConfig,authServerOAuth2Config,methodSecurityConfig,OAuth2ResourceServerConfig,OAuth2SecurityConfig,companyRestController,departmentRestController,deviceRestController,driverRestController,companyDaoImpl,customerDaoImpl,departmentDaoImpl,deviceDaoImpl,driverDaoImpl,fuelDeliveryDaoImpl,purchaseOrderDaoImpl,truckDaoImpl,companyService,customerService,departmentService,devicesService,driverService,fuelDeliveryService,purchaseOrderService,truckService,org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar,org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration,authorizationEndpoint,tokenEndpoint,checkTokenEndpoint,whitelabelApprovalEndpoint,whitelabelErrorEndpoint,oauth2EndpointHandlerMapping,consumerTokenServices,defaultAuthorizationServerTokenServices,org.springframework.security.oauth2.config.annotation.configuration.ClientDetailsServiceConfiguration,clientDetailsServiceConfigurer,scopedTarget.clientDetailsService,clientDetailsService,org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration,org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration,authenticationManagerBuilder,enableGlobalAuthenticationAutowiredConfigurer,org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration,objectPostProcessor,methodSecurityInterceptor,methodSecurityMetadataSource,preInvocationAuthorizationAdvice,metaDataSourceAdvisor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration,delegatingApplicationListener,webSecurityExpressionHandler,springSecurityFilterChain,privilegeEvaluator,autowiredWebSecurityConfigurersIgnoreParents,authenticationManagerBean,tokenStore,userApprovalHandler,approvalStore,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcPathMatcher,mvcUrlPathHelper,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,urlBasedViewResolver,dataSource,entityManagerFactory,jpaVendorAdapter,transactionManager]; root of factory hierarchy
Retrieved dependent beans for bean 'mvcResourceUrlProvider': [requestMappingHandlerMapping]
Retrieved dependent beans for bean 'springSecurityFilterChain': [webSecurityExpressionHandler, privilegeEvaluator]
Invoking destroy() on bean with name 'springSecurityFilterChain'
Invoking destroy() on bean with name 'defaultAuthorizationServerTokenServices'
Invoking destroy() on bean with name 'consumerTokenServices'
Retrieved dependent beans for bean 'entityManagerFactory': [companyDaoImpl, departmentDaoImpl, deviceDaoImpl, driverDaoImpl, customerDaoImpl, fuelDeliveryDaoImpl, purchaseOrderDaoImpl, truckDaoImpl, transactionManager]
Retrieved dependent beans for bean 'companyDaoImpl': [companyService]
Retrieved dependent beans for bean 'companyService': [companyRestController]
Retrieved dependent beans for bean 'departmentDaoImpl': [departmentService]
Retrieved dependent beans for bean 'departmentService': [departmentRestController, com.govansnv.fuel.test.IFindBySearchTermTest]
Retrieved dependent beans for bean 'deviceDaoImpl': [devicesService]
Retrieved dependent beans for bean 'devicesService': [deviceRestController]
Retrieved dependent beans for bean 'driverDaoImpl': [driverService]
Retrieved dependent beans for bean 'driverService': [driverRestController]
Retrieved dependent beans for bean 'customerDaoImpl': [customerService]
Retrieved dependent beans for bean 'fuelDeliveryDaoImpl': [fuelDeliveryService]
Retrieved dependent beans for bean 'purchaseOrderDaoImpl': [purchaseOrderService]
Retrieved dependent beans for bean 'truckDaoImpl': [truckService]
Invoking destroy() on bean with name 'entityManagerFactory'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Retrieved dependent beans for bean 'objectPostProcessor': [methodSecurityConfig, OAuth2SecurityConfig, org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration, authenticationManagerBuilder, org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration, org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration]
Retrieved dependent beans for bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration': [org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration]
Retrieved dependent beans for bean 'authenticationManagerBuilder': [methodSecurityInterceptor]
Invoking destroy() on bean with name 'objectPostProcessor'
